//
//  CartView.m
//  yhd
//
//  Created by  on 12-6-27.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "CartView.h"
#import "ProductVO.h"
#import "SDImageView+SDWebCache.h"
#import "DataHandler.h"
#import "CartItemVO.h"
#import "GlobalValue.h"
#import "UpdateCartResult.h"
#import "ProductService.h"
#define  KCartViewTopHeight 158
#define  KCartViewFootButHeight 35

@interface PrivateCartItemView : UIView
@property(nonatomic, retain)CartItemVO  * cartItem;
@property(nonatomic, retain)UILabel     * buyCountLabel;
@property(nonatomic, retain)UIButton    * decreaseButton;

-(void)updateUIProductCount;
@end

@implementation PrivateCartItemView
@synthesize cartItem = _cartItem;
@synthesize decreaseButton = _decreaseButton;
@synthesize buyCountLabel = _buyCountLabel;

-(void)dealloc
{
    [_cartItem release];
    [_decreaseButton release];
    [_buyCountLabel release];
    
    [super dealloc];
}

-(void)updateUIProductCount
{
    int count = _cartItem.buyQuantity ? [_cartItem.buyQuantity intValue] : 0;
    NSString * countStr = [NSString stringWithFormat:@"%d", count];
    self.buyCountLabel.text = countStr;
    self.decreaseButton.enabled = [_cartItem.buyQuantity intValue] > 1;
}

@end


// ----------------------------------------

@interface CartView ()
@property BOOL                          canChanegProductCount;
@end


@implementation CartView
@synthesize cartViewDelegate;
@synthesize canChanegProductCount = _canChanegProductCount;

-(id)initWithDefault
{
    if ([[DataHandler sharedDataHandler] screenWidth]==768) {//竖屏
        [self initWithFrame:CGRectMake(768-kCartViewWidth, kTopHeight, kCartViewWidth, 1004-kTopHeight)];
    } else {//横屏
        [self initWithFrame:CGRectMake(1024-kCartViewWidth, kTopHeight, kCartViewWidth, 748-kTopHeight)];
    }
    return self;
}

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self)
    {
        _canChanegProductCount = YES;
        
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(handleCartReload:)name:kNotifyCartReload object:nil];
        
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(handleAddProductResult:)name:PAD_NOTIFY_ADD_PRODUCT_RESULT object:nil];
        
        
        dataHandler=[DataHandler sharedDataHandler];
        self.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"cart_bg.png"]];
        //self.productArray=[NSMutableArray arrayWithCapacity:5];
        //self.productCountDic=[NSMutableDictionary dictionaryWithCapacity:1];
        scrollView=[[UIScrollView alloc]initWithFrame:CGRectMake(0, KCartViewTopHeight, frame.size.width, frame.size.height-KCartViewTopHeight-KCartViewFootButHeight)];
        scrollView.clipsToBounds = YES;
        scrollView.scrollEnabled = YES;
        scrollView.showsHorizontalScrollIndicator = NO;
        scrollView.showsVerticalScrollIndicator = NO;
        scrollView.directionalLockEnabled = YES;
        //scrollView.pagingEnabled = YES;
        //scrollView.delegate=self;
        scrollView.alpha=0;
        [self addSubview:scrollView];
        //[scrollView release];
        
        topView=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 120, KCartViewTopHeight)];
        UIButton *lookBut=[UIButton buttonWithType:UIButtonTypeCustom];
       // [lookBut setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        
        [lookBut setImage:[UIImage imageNamed:@"cart_look1.png"] forState:UIControlStateNormal];
        [lookBut setImage:[UIImage imageNamed:@"cart_look2.png"] forState:UIControlStateHighlighted];
        [lookBut addTarget:self action:@selector(look:) forControlEvents:UIControlEventTouchUpInside];
        [lookBut setFrame:CGRectMake(10, 125, 101, 31)];//
        [topView addSubview:lookBut];
        
        //tabBar
        tabBar = [[UITabBar alloc] initWithFrame:CGRectMake((frame.size.width-48)/2, 32, 48, 45)];
        tabBar.delegate=self;
        if ([tabBar respondsToSelector:@selector(setBackgroundImage:)]) {
            tabBar.backgroundImage = [UIImage imageNamed:@"cart_bg.png"];
        }
        
        tabBarItem = [[UITabBarItem alloc] initWithTitle:@"" image:[UIImage imageNamed:nil] tag:0];
       
        //[tabBarItem setBadgeValue:[NSString stringWithFormat:@"%d",dataHandler.cartCount]];
        NSArray *frameTabBarItemArray = [[NSArray alloc] initWithObjects:tabBarItem,nil];
        [tabBar setItems:frameTabBarItemArray];
        
        UIView *v=[tabBar.subviews objectAtIndex:0];
        //NSLog(@"v==%@",v);
        if (v.frame.size.width==48) {
            v.alpha=0.0;
        }


        tabBar.userInteractionEnabled=YES;
        UIView *tabBarBg = [[UIView alloc] initWithFrame:CGRectMake(0, 0,48, 45)];
        UIImage *img = [UIImage imageNamed:@"cart_carbg.png"];
        //UIColor *color = [UIColor clearColor];
        UIColor *color = [UIColor colorWithPatternImage:img];
        tabBarBg.backgroundColor = color;
        tabBarBg.backgroundColor = color;
        [tabBar insertSubview:tabBarBg atIndex:0];
        
        UIImageView *tabBarImageView = [[UIImageView alloc] initWithFrame:CGRectMake(5,10,37, 29)];
        tabBarImageView.image=[UIImage imageNamed:@"cart_icon.png"];
        tabBarImageView.userInteractionEnabled=YES;
        [tabBarBg insertSubview:tabBarImageView atIndex:1];
        tabBarBg.opaque = YES;
        [tabBarBg release];
        [tabBarImageView release];
        
        [self addSubview:tabBar];
        //[tabBar release];
        
        
        UILabel *totleLabel2 = [[UILabel alloc] initWithFrame:CGRectMake(10, 95, 55.0, 20) ];
        totleLabel2.textColor = kBlackColor;  
        totleLabel2.backgroundColor=[UIColor clearColor];
        
        //totleLabel.font=[label1.font fontWithSize:20.0];
        totleLabel2.text=@"总价:";
        [topView insertSubview:totleLabel2 atIndex:1];
        [totleLabel2 release];
        
        totleLabel = [[UILabel alloc] initWithFrame:CGRectMake(55, 95, 60.0, 20) ];
        totleLabel.textColor = kRedColor;  
        totleLabel.adjustsFontSizeToFitWidth=YES;
        totleLabel.minimumFontSize=10;
        totleLabel.backgroundColor=[UIColor clearColor];
        //totleLabel.font=[label1.font fontWithSize:20.0];
        totleLabel.text=[NSString stringWithFormat:@"¥%i", 0];
        [topView insertSubview:totleLabel atIndex:1];
        //[totleLabel release];
        
        [self addSubview:topView];
        topView.alpha=0;
        //[topView release];



    }
    return self;
}
- (void)tabBar:(UITabBar *)tabBar didSelectItem:(UITabBarItem *)item{
    if (item==tabBarItem) {
        [self jiesuan:nil];
    }
}
-(void)reloadData{
    for (UIView *v in [scrollView subviews]) {
        if (v.tag>99) {
            [v removeFromSuperview];
        }
    }
    int i=0;
    float totalPrice=0;//总价

    for (CartItemVO *cartItem in dataHandler.cart.buyItemList)
    {
        
        PrivateCartItemView *cartItemView = [[PrivateCartItemView alloc] initWithFrame:CGRectMake(0, 157*i,120, 157)];
        cartItemView.cartItem = cartItem;
        
        cartItemView.tag = 100 + i;
        UIImageView *imageView=[[UIImageView alloc] initWithFrame:CGRectMake(25, 27, 69, 70)];
        
        imageView.userInteractionEnabled=YES;
        [imageView setImageWithURL:[NSURL URLWithString:cartItem.product.miniDefaultProductUrl]];
        [cartItemView insertSubview:imageView atIndex:1];
        [imageView release];
        
        UIButton *deleteBut=[UIButton buttonWithType:UIButtonTypeCustom];
        deleteBut.tag=i;
        
        [deleteBut setImage:[UIImage imageNamed:@"cart_delete.png"] forState:UIControlStateHighlighted];
        [deleteBut setImage:[UIImage imageNamed:@"cart_delete.png"] forState:UIControlStateNormal];
        [deleteBut addTarget:self action:@selector(delete:) forControlEvents:UIControlEventTouchUpInside];
        [deleteBut setFrame:CGRectMake(80, 18, 19, 19)];//
        [cartItemView addSubview:deleteBut];

    
        
        UILabel *price = [[UILabel alloc] initWithFrame:CGRectMake(18, 108, 55.0, 20.0) ];
        price.textColor = kBlackColor;  
        price.backgroundColor=[UIColor clearColor];
        //price.textAlignment=UITextAlignmentCenter;
        price.font=[UIFont fontWithName:@"Helvetica" size:16];
        price.text=@"价格:";
        [cartItemView insertSubview:price atIndex:1];
        [price release];
    

        UILabel *price2 = [[UILabel alloc] initWithFrame:CGRectMake(58, 108, 60.0, 20.0) ];
        price2.textColor = kRedColor;  
        price2.backgroundColor=[UIColor clearColor];
        //price.textAlignment=UITextAlignmentCenter;
        price2.font=[UIFont fontWithName:@"Helvetica" size:16];
         
        NSString *priceStr=[NSString stringWithFormat:@"%.2f",[[cartItem.product realPrice] floatValue]];
        if ([priceStr hasSuffix:@"0"] ) {
            priceStr=[priceStr substringToIndex:priceStr.length-1];
            if ([priceStr hasSuffix:@".0"] ) {
                priceStr=[priceStr substringToIndex:priceStr.length-2];
            }
        }

        price2.text=[NSString stringWithFormat:@"¥%@", priceStr];
        [cartItemView insertSubview:price2 atIndex:1];
        [price2 release];
    
        
        //buyCountLabel
        cartItemView.buyCountLabel = [[UILabel alloc] initWithFrame:CGRectMake(44, 140, 32.0, 24.0) ];
        cartItemView.buyCountLabel.textColor =  kBlackColor;
        cartItemView.buyCountLabel.backgroundColor=[UIColor colorWithPatternImage:[UIImage imageNamed:@"cart_count.png"]];
        cartItemView.buyCountLabel.textAlignment=UITextAlignmentCenter;
        cartItemView.buyCountLabel.text=[NSString stringWithFormat:@"%@", cartItem.buyQuantity];
        [cartItemView insertSubview:cartItemView.buyCountLabel atIndex:1];
        [cartItemView.buyCountLabel release];
        
        //总价
        
        totalPrice+=[cartItem.buyQuantity intValue]*[[cartItem.product realPrice] floatValue];
        dataHandler.cart.totalprice=[NSNumber numberWithFloat:totalPrice]; 
        
        cartItemView.decreaseButton = [UIButton buttonWithType:UIButtonTypeCustom];
        cartItemView.decreaseButton.tag=i;
        
        [cartItemView.decreaseButton setImage:[UIImage imageNamed:@"cart_countajian1.png"] forState:UIControlStateDisabled];
        [cartItemView.decreaseButton setImage:[UIImage imageNamed:@"cart_countajian2.png"] forState:UIControlStateNormal];
        if ([cartItemView.buyCountLabel.text isEqualToString:@"1"])
        {
            cartItemView.decreaseButton.enabled=NO;
        }
        [cartItemView.decreaseButton addTarget:self action:@selector(jian:) forControlEvents:UIControlEventTouchUpInside];
        [cartItemView.decreaseButton setFrame:CGRectMake(20, 140, 24, 24)];//
        [cartItemView addSubview:cartItemView.decreaseButton];
        
        UIButton *addBut=[UIButton buttonWithType:UIButtonTypeCustom];
        addBut.tag=i;
        [addBut setImage:[UIImage imageNamed:@"cart_countadd.png"] forState:UIControlStateNormal];
        [addBut addTarget:self action:@selector(add:) forControlEvents:UIControlEventTouchUpInside];
        [addBut setFrame:CGRectMake(76, 140, 24, 24)];//
        [cartItemView addSubview:addBut];

        
        [scrollView addSubview:cartItemView];
        [cartItemView release];
       
        i++;

    }
    int j=0;
    for (CartItemVO *cartItem in dataHandler.cart.redemptionItemList) {
        PrivateCartItemView *cartItemView = [[PrivateCartItemView alloc] initWithFrame:CGRectMake(0, 157*(i+j),120, 157)];
        cartItemView.cartItem = cartItem;
        
        cartItemView.tag = 1000 + j;
        UIImageView *imageView=[[UIImageView alloc] initWithFrame:CGRectMake(25, 27, 69, 70)];
        
        imageView.userInteractionEnabled=YES;
        [imageView setImageWithURL:[NSURL URLWithString:cartItem.product.miniDefaultProductUrl]];
        [cartItemView insertSubview:imageView atIndex:1];
        [imageView release];
        
        UIImageView* redemLogo=[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 37, 37)];
        redemLogo.image=[UIImage imageNamed:@"redeem.png"];
        [imageView addSubview:redemLogo];
        [redemLogo release];
        
        UIButton *deleteBut=[UIButton buttonWithType:UIButtonTypeCustom];
        deleteBut.tag=1000+j;
        
        [deleteBut setImage:[UIImage imageNamed:@"cart_delete.png"] forState:UIControlStateHighlighted];
        [deleteBut setImage:[UIImage imageNamed:@"cart_delete.png"] forState:UIControlStateNormal];
        [deleteBut addTarget:self action:@selector(delete:) forControlEvents:UIControlEventTouchUpInside];
        [deleteBut setFrame:CGRectMake(80, 18, 19, 19)];//
        [cartItemView addSubview:deleteBut];
        
        
        
        UILabel *price = [[UILabel alloc] initWithFrame:CGRectMake(18, 108, 55.0, 20.0) ];
        price.textColor = kBlackColor;
        price.backgroundColor=[UIColor clearColor];
        //price.textAlignment=UITextAlignmentCenter;
        price.font=[UIFont fontWithName:@"Helvetica" size:16];
        price.text=@"价格:";
        [cartItemView insertSubview:price atIndex:1];
        [price release];
        
        
        UILabel *price2 = [[UILabel alloc] initWithFrame:CGRectMake(58, 108, 60.0, 20.0) ];
        price2.textColor = kRedColor;
        price2.backgroundColor=[UIColor clearColor];
        //price.textAlignment=UITextAlignmentCenter;
        price2.font=[UIFont fontWithName:@"Helvetica" size:16];
        
        NSString *priceStr=[NSString stringWithFormat:@"%.2f",[[cartItem.product realPrice] floatValue]];
        if ([priceStr hasSuffix:@"0"] ) {
            priceStr=[priceStr substringToIndex:priceStr.length-1];
            if ([priceStr hasSuffix:@".0"] ) {
                priceStr=[priceStr substringToIndex:priceStr.length-2];
            }
        }
        
        price2.text=[NSString stringWithFormat:@"¥%@", priceStr];
        [cartItemView insertSubview:price2 atIndex:1];
        [price2 release];
        
        
        //buyCountLabel
        cartItemView.buyCountLabel = [[UILabel alloc] initWithFrame:CGRectMake(44, 140, 32.0, 24.0) ];
        cartItemView.buyCountLabel.textColor =  kBlackColor;
        cartItemView.buyCountLabel.backgroundColor=[UIColor colorWithPatternImage:[UIImage imageNamed:@"cart_count.png"]];
        cartItemView.buyCountLabel.textAlignment=UITextAlignmentCenter;
        cartItemView.buyCountLabel.text=[NSString stringWithFormat:@"%@", cartItem.buyQuantity];
        [cartItemView insertSubview:cartItemView.buyCountLabel atIndex:1];
        [cartItemView.buyCountLabel release];
        
        //总价
        
        totalPrice+=[cartItem.buyQuantity intValue]*[[cartItem.product realPrice] floatValue];
        dataHandler.cart.totalprice=[NSNumber numberWithFloat:totalPrice];
        
        [scrollView addSubview:cartItemView];
        [cartItemView release];
        
        j++;
        
    }

    int k=0;
    for (CartItemVO *cartItem in dataHandler.cart.gifItemtList) {
        PrivateCartItemView *cartItemView = [[PrivateCartItemView alloc] initWithFrame:CGRectMake(0, 157*(i+j+k),120, 157)];
        cartItemView.cartItem = cartItem;
        
        cartItemView.tag = 10000 + k;
        UIImageView *imageView=[[UIImageView alloc] initWithFrame:CGRectMake(25, 27, 69, 70)];
        
        imageView.userInteractionEnabled=YES;
        [imageView setImageWithURL:[NSURL URLWithString:cartItem.product.miniDefaultProductUrl]];
        [cartItemView insertSubview:imageView atIndex:1];
        [imageView release];
        
        UIImageView* giftLogo=[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 37, 37)];
        giftLogo.image=[UIImage imageNamed:@"free.png"];
        [imageView addSubview:giftLogo];
        [giftLogo release];
        
        UIButton *deleteBut=[UIButton buttonWithType:UIButtonTypeCustom];
        deleteBut.tag=k+10000;
        
        [deleteBut setImage:[UIImage imageNamed:@"cart_delete.png"] forState:UIControlStateHighlighted];
        [deleteBut setImage:[UIImage imageNamed:@"cart_delete.png"] forState:UIControlStateNormal];
        [deleteBut addTarget:self action:@selector(delete:) forControlEvents:UIControlEventTouchUpInside];
        [deleteBut setFrame:CGRectMake(80, 18, 19, 19)];//
        [cartItemView addSubview:deleteBut];
        
        
        
        UILabel *price = [[UILabel alloc] initWithFrame:CGRectMake(18, 108, 55.0, 20.0) ];
        price.textColor = kBlackColor;
        price.backgroundColor=[UIColor clearColor];
        //price.textAlignment=UITextAlignmentCenter;
        price.font=[UIFont fontWithName:@"Helvetica" size:16];
        price.text=@"价格:";
        [cartItemView insertSubview:price atIndex:1];
        [price release];
        
        
        UILabel *price2 = [[UILabel alloc] initWithFrame:CGRectMake(58, 108, 60.0, 20.0) ];
        price2.textColor = kRedColor;
        price2.backgroundColor=[UIColor clearColor];
        //price.textAlignment=UITextAlignmentCenter;
        price2.font=[UIFont fontWithName:@"Helvetica" size:16];
        
        NSString *priceStr=[NSString stringWithFormat:@"%.2f",[[cartItem.product realPrice] floatValue]];
        if ([priceStr hasSuffix:@"0"] ) {
            priceStr=[priceStr substringToIndex:priceStr.length-1];
            if ([priceStr hasSuffix:@".0"] ) {
                priceStr=[priceStr substringToIndex:priceStr.length-2];
            }
        }
        
        price2.text=[NSString stringWithFormat:@"¥%@", priceStr];
        [cartItemView insertSubview:price2 atIndex:1];
        [price2 release];
        
        
        //buyCountLabel
        cartItemView.buyCountLabel = [[UILabel alloc] initWithFrame:CGRectMake(44, 140, 32.0, 24.0) ];
        cartItemView.buyCountLabel.textColor =  kBlackColor;
        cartItemView.buyCountLabel.backgroundColor=[UIColor colorWithPatternImage:[UIImage imageNamed:@"cart_count.png"]];
        cartItemView.buyCountLabel.textAlignment=UITextAlignmentCenter;
        cartItemView.buyCountLabel.text=[NSString stringWithFormat:@"%@", cartItem.buyQuantity];
        [cartItemView insertSubview:cartItemView.buyCountLabel atIndex:1];
        [cartItemView.buyCountLabel release];
        
        //总价
        
        totalPrice+=[cartItem.buyQuantity intValue]*[[cartItem.product realPrice] floatValue];
        dataHandler.cart.totalprice=[NSNumber numberWithFloat:totalPrice];
        
        [scrollView addSubview:cartItemView];
        [cartItemView release];
        
        k++;

    }
    NSString *totalStr=[NSString stringWithFormat:@"%.2f",totalPrice];
    if ([totalStr hasSuffix:@"0"] ) {
        totalStr=[totalStr substringToIndex:totalStr.length-1];
        if ([totalStr hasSuffix:@".0"] ) {
            totalStr=[totalStr substringToIndex:totalStr.length-2];
        }
    }
    totleLabel.text=[NSString stringWithFormat:@"¥%@",totalStr];

    scrollView.contentSize=CGSizeMake(10, (i+j+k)*160);
}
-(void)setFrame:(CGRect)frame{
    [UIView beginAnimations:@"cartAnimation" context:nil];
    [UIView setAnimationDuration:0.2];
    [UIView setAnimationCurve:UIViewAnimationCurveLinear];
    [super setFrame:frame];
    [UIView commitAnimations];
   
    scrollView.frame=CGRectMake(0, KCartViewTopHeight, frame.size.width, frame.size.height-KCartViewTopHeight-KCartViewFootButHeight);
    //展开
    if(frame.size.width>100){
        self.backgroundColor=[UIColor colorWithPatternImage:[UIImage imageNamed:@"cart_bg2.png"]];
        scrollView.alpha=1;
        topView.alpha=1;
        tabBar.frame=CGRectMake((frame.size.width-48)/2, 32, 48, 45);
       
        closeBut=[[UIButton buttonWithType:UIButtonTypeCustom] retain];
        [closeBut setTitleColor:kBlackColor forState:UIControlStateNormal];
        //[closeBut setTitle:@"收起" forState:UIControlStateNormal];
        [closeBut setImage:[UIImage imageNamed:@"cart_close.png"] forState:UIControlStateNormal];
        [closeBut setImage:[UIImage imageNamed:@"cart_close.png"] forState:UIControlStateHighlighted];
        [closeBut addTarget:self action:@selector(close:) forControlEvents:UIControlEventTouchUpInside];
        [closeBut setFrame:CGRectMake((frame.size.width-102)/2, frame.size.height-KCartViewFootButHeight, 108, 25)];//
        [self addSubview:closeBut];
        
        for (UIView *sub in self.subviews)
        {
            if (sub.tag == 13800 || sub.tag == 13801 || sub.tag == 13802)
            {
                [sub removeFromSuperview];
            }
        }
        
        if (label1) {
            [label1 removeFromSuperview];
        }
        if (jiesuanBut) {
            [jiesuanBut removeFromSuperview];
        }
        if (openBut) {
            [openBut removeFromSuperview];
        }

    }else {
        self.backgroundColor=[UIColor colorWithPatternImage:[UIImage imageNamed:@"cart_bg.png"]];
        tabBar.frame=CGRectMake((frame.size.width-48)/2, 32, 48, 45);
        if (closeBut) {
            [closeBut removeFromSuperview];
        }
        jiesuanBut=[[UIButton buttonWithType:UIButtonTypeCustom] retain];
        
        [jiesuanBut setImage:[UIImage imageNamed:@"cart_jiesun1.png"] forState:UIControlStateNormal];
        [jiesuanBut setImage:[UIImage imageNamed:@"cart_jiesun2.png"] forState:UIControlStateHighlighted];
        [jiesuanBut addTarget:self action:@selector(jiesuan:) forControlEvents:UIControlEventTouchUpInside];
        [jiesuanBut setFrame:CGRectMake((frame.size.width-57)/2+2, 110, 57, 31)];//
        jiesuanBut.tag = 13800;
        [self addSubview:jiesuanBut];

        scrollView.alpha=0;
        topView.alpha=0;
        label1 = [[UILabel alloc] initWithFrame:CGRectMake(27,140, 20.0, 480) ];
        label1.textColor = kBlackColor;;  
        label1.backgroundColor=[UIColor clearColor];
        label1.textAlignment=UITextAlignmentCenter;
        label1.numberOfLines=18;
        label1.font=[label1.font fontWithSize:20.0];
        label1.text=@"长按并拖动商品至此处可直接加入购物车";
        label1.tag = 13801;
        [self insertSubview:label1 atIndex:1];
        //[label1 release];
        
        openBut=[[UIButton buttonWithType:UIButtonTypeCustom] retain];
        [openBut setTitleColor:kBlackColor forState:UIControlStateNormal];
        
        [openBut setImage:[UIImage imageNamed:@"cart_zhankaibut.png"] forState:UIControlStateNormal];
        [openBut setImage:[UIImage imageNamed:@"cart_zhankaibut.png"] forState:UIControlStateHighlighted];
        [openBut addTarget:self action:@selector(open:) forControlEvents:UIControlEventTouchUpInside];
        [openBut setFrame:CGRectMake((frame.size.width-63)/2, frame.size.height-KCartViewFootButHeight, 63, 25)];//
        openBut.tag = 13802;
        [self addSubview:openBut];
    }
    
    
}
-(void)setCartCount:(NSInteger)count{
    if (count>0) {
        [tabBarItem setBadgeValue:[NSString stringWithFormat:@"%d",count]];
    }else {
        [tabBarItem setBadgeValue:nil];
    }
    
}
-(void)close:(id)sender{
    NSLog(@"close---");
    CGRect rect=self.frame;
    rect.size.width=kCartViewWidth;
    rect.origin.x+=kCartViewWidthExtend;
    [self setFrame:rect];
}
-(void)open:(id)sender{
    
    CGRect rect=self.frame;
    rect.size.width=kCartViewWidth+kCartViewWidthExtend;
    rect.origin.x-=kCartViewWidthExtend;
    [self setFrame:rect];
}
-(void)delete:(id)sender{
    UIButton *but=(UIButton *)sender;
    CartItemVO *cartItem;
    if(but.tag<dataHandler.cart.buyItemList.count){
        cartItem =[dataHandler.cart.buyItemList objectAtIndex :but.tag];
//        [dataHandler delProductFromCart:cartItem];
//        dataHandler.cart.totalquantity=[NSNumber numberWithInt: [dataHandler.cart.totalquantity intValue]-[cartItem.buyQuantity intValue]]; 
//        [dataHandler.cart.buyItemList  removeObjectAtIndex:but.tag];
//        [self reloadData];
//        [self setCartCount:dataHandler.cart.realtimeTotalQuantity];
//        [[NSNotificationCenter defaultCenter] postNotificationName:kNotifyCartChange object:nil];

    }else{
        //换购删除
        
        int type;
        if (but.tag<10000) {
            cartItem=[dataHandler.cart.redemptionItemList objectAtIndex:but.tag-1000];
            type=0;
        }else{//赠品删除
            cartItem=[dataHandler.cart.gifItemtList objectAtIndex:but.tag-10000];
            type=1;
        }
        //[self deletePromotion:cartItem type:type];
    }
    [dataHandler delProductFromCart:cartItem];

}
-(void)deletePromotion:(CartItemVO*)cartItem type:(int)type{
    NSMutableArray *tempArray=[[NSMutableArray alloc] initWithArray:dataHandler.cart.redemptionItemList];
    [tempArray addObjectsFromArray:dataHandler.cart.gifItemtList];
    //清理换购 赠品
    for (CartItemVO *theCartItemVO in tempArray) {
        if ([theCartItemVO.product.productId intValue]==[cartItem.product.productId intValue]
            || [theCartItemVO.product.promotionId isEqualToString:cartItem.product.promotionId]) {
            [tempArray removeObject:theCartItemVO];
        }
    }
    __block int result;
    [self performInThreadBlock:^{
        NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
        ProductService *pServ=[[ProductService alloc] init];
        NSMutableArray *productIdArray=[[NSMutableArray alloc] init];
        NSMutableArray *promotionIdArray=[[NSMutableArray alloc] init];
        NSMutableArray *merchantIdArray=[[NSMutableArray alloc] init];
        NSMutableArray *quantityArray=[[NSMutableArray alloc] init];
        if ([GlobalValue getGlobalValueInstance].token!=nil) {
            int i;
            for (i=0; i<[tempArray count]; i++) {
                CartItemVO *cartItemVO=[tempArray objectAtIndex:i];
                ProductVO *productVO=cartItemVO.product;
                if (productVO!=nil) {
                    [productIdArray addObject:[NSNumber numberWithInt:[productVO.productId intValue]]];
                    if (productVO.promotionId!=nil) {
                        [promotionIdArray addObject:[NSString stringWithString:productVO.promotionId]];
                    } else {
                        [promotionIdArray addObject:@""];
                    }
                    [merchantIdArray addObject:[NSNumber numberWithInt:[productVO.merchantId intValue]]];
                    [quantityArray addObject:[NSNumber numberWithInt:[productVO.quantity intValue]]];
                }
            }
            result=[pServ updateCartPromotion:[GlobalValue getGlobalValueInstance].token giftProductIdList:productIdArray promotionIdList:promotionIdArray merchantIdList:merchantIdArray quantityList:quantityArray Type:1];
        }
        [productIdArray release];
        [promotionIdArray release];
        [merchantIdArray release];
        [quantityArray release];
        [pServ release];
        [pool drain];
    } completionInMainBlock:^{
        if (result>0) {
            if (type==0) {
                dataHandler.cart.totalquantity=[NSNumber numberWithInt: [dataHandler.cart.totalquantity intValue]-[cartItem.buyQuantity intValue]];
                [dataHandler.cart.redemptionItemList removeObject:cartItem];
            }else{
                dataHandler.cart.totalquantity=[NSNumber numberWithInt: [dataHandler.cart.totalquantity intValue]-[cartItem.buyQuantity intValue]];
                [dataHandler.cart.gifItemtList removeObject:cartItem];
            }
            [self reloadData];
            [self setCartCount:dataHandler.cart.totalquantity.intValue];
            [[NSNotificationCenter defaultCenter] postNotificationName:kNotifyCartChange object:nil];
        } else {
       UIAlertView* al= [[UIAlertView alloc] initWithTitle:@"删除失败" message:nil delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
            [al show];
            [al release];
        }
    }];

}
-(void)updateUIProductCount
{
    for (UIView * sub in scrollView.subviews)
    {
        if ([sub isKindOfClass:[PrivateCartItemView class]])
        {
            [((PrivateCartItemView*)sub) updateUIProductCount];
        }
    }
}

-(void)changeProductCountIncreased:(BOOL)aIncreased index:(NSUInteger)aIndex
{
    if (!_canChanegProductCount)
    {
        return;
    }
    
    _canChanegProductCount = NO;
    
    int factor = aIncreased ? 1 : -1;
    
    if(aIndex < dataHandler.cart.buyItemList.count)
    {
        // model
        CartItemVO *cartItem = [dataHandler.cart.buyItemList objectAtIndex:aIndex];
        cartItem.buyQuantityCopy = cartItem.buyQuantity;
        cartItem.buyQuantity = [NSNumber numberWithInt: [cartItem.buyQuantity intValue] + factor];
        cartItem.updateType = [NSNumber numberWithInt:0];
        
        // view
        dataHandler.cart.totalquantity = [NSNumber numberWithInt:dataHandler.cart.realtimeTotalQuantity];
        [self setCartCount:dataHandler.cart.totalquantity.intValue];
        [self updateUIProductCount];
        
        // server
        if ([GlobalValue getGlobalValueInstance].token)
        {
            [dataHandler updateProductQuantityToCart:cartItem];
        }
        else
        {
            _canChanegProductCount = YES;
        }
        
        [[NSNotificationCenter defaultCenter] postNotificationName:kNotifyCartChange object:nil];
        
        [self reloadData];
    }
    
}

-(void)jian:(UIButton *)but
{
    [self changeProductCountIncreased:NO index:but.tag];
}

-(void)add:(UIButton *)but
{
    [self changeProductCountIncreased:YES index:but.tag];
}


-(void)jiesuan:(UIButton *)but
{
    [MobClick event:@"checkout"];
    [SharedPadDelegate enterCart];
}
-(void)look:(UIButton *)but
{
    [MobClick event:@"checkout"];
    [SharedPadDelegate enterCart];
}
/*
// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
}
*/
- (void)handleCartReload:(NSNotification *)note{
    [self setCartCount:dataHandler.cart.totalquantity.intValue];
    [self reloadData];
    _canChanegProductCount = YES;
}

- (void)handleAddProductResult:(NSNotification *)note
{
    //[self performSelectorOnMainThread:@selector(doHandleAddProductResult:) withObject:note waitUntilDone:YES];
}

- (void)doHandleAddProductResult:(NSNotification *)note
{
    NSArray *arr = note.object;
    
    if ([arr isKindOfClass:[NSArray class]] && [arr count] > 1)
    {
        UpdateCartResult *updateCartResult = [arr objectAtIndex:0];
        CartItemVO* cartItem = [arr objectAtIndex:1];
        
        if ([updateCartResult isKindOfClass:[NSNull class]])
        {
            [[OtsErrorHandler sharedInstance] alertNilObject];
            cartItem.buyQuantity = cartItem.buyQuantityCopy;
        }
        else if ([[updateCartResult resultCode] intValue] != 1)
        {
            [[OtsErrorHandler sharedInstance] alert:updateCartResult.errorInfo];
            cartItem.buyQuantity = cartItem.buyQuantityCopy;
        }
        
        [[NSNotificationCenter defaultCenter] postNotificationName:kNotifyCartChange object:nil];
        [[NSNotificationCenter defaultCenter] postNotificationName:kNotifyCartReload object:nil];
    }
    
    [self updateUIProductCount];
    
    _canChanegProductCount = YES;
}

- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    OTS_SAFE_RELEASE(scrollView);
    OTS_SAFE_RELEASE(closeBut);
    OTS_SAFE_RELEASE(jiesuanBut);
    OTS_SAFE_RELEASE(openBut);
    OTS_SAFE_RELEASE(label1);
    OTS_SAFE_RELEASE(totleLabel);
    OTS_SAFE_RELEASE(topView);
    OTS_SAFE_RELEASE(tabBar);
    OTS_SAFE_RELEASE(tabBarItem);
    cartViewDelegate=nil;
    [super dealloc];
}
@end
