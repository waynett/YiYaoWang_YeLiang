//
//  MyFavorite.m
//  TheStoreApp
//
//  Created by zhengchen on 11-12-1.
//  Copyright (c) 2011年 yihaodian. All rights reserved.
//

#import "MyFavorite.h"
#import "FavoriteService.h"
#import "GlobalValue.h"
#import "ProductVO.h"
#import "ASIHTTPRequest.h"
#import <QuartzCore/QuartzCore.h>
#import "StringUtil.h"
#import "DataController.h"
#import "OTSActionSheet.h"
#import "CartService.h"
#import "LocalCartItemVO.h"
#import "ErrorStrings.h"
#import "OTSAlertView.h"
#import "HomePage.h"
#import "TheStoreAppAppDelegate.h"
#import "OTSProductDetail.h"
#import "CategoryProductCell.h"
#import "UITableView+LoadingMore.h"
#import "ProductService.h"
#import "GTMBase64.h"
#import "DoTracking.h"
#import "SDImageView+SDWebCache.h"
#import "CartAnimation.h"
#import "YWFavoriteService.h"

#import "UserInfo.h"
#import "FavoriteResultInfo.h"
#import "FavoriteProductInfo.h"

#define UIColorFromRGB(rgbValue) [UIColor \
colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 \
green:((float)((rgbValue & 0xFF00) >> 8))/255.0 \
blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]

#define TITLE_BACK_BUTTON_TAG 100 //标题按钮tag
#define TITLE_LOGOUT_BUTTON_TAG 101 //标题注销tag
#define TITLE_LABEL_TAG 102 //标题文字

#define TYPE_SWITCH_HIEGHT 37

#define FAVORITE_STATE 1//收藏状态
#define FAVORITE_DEL_STATE 2//删除状态
#define FAVORITE_BUY_STATE 3//购买状态
#define MYFAVORITE_STATE 4//我的收藏状态


#define LOADMORE_HEIGHT     40

#define ALERTVIEW_TAG_OTHERS 0

#define URL_BASE_MALL_NO_ONE                        @"http://m.1mall.com/mw/product/"


@interface MyFavorite ()
@property(nonatomic, retain)UIWebView* mallListWebView;
@property(nonatomic, retain)UIButton* yihaodianTypeBtn;
@property(nonatomic, retain)UIButton* mallTypeBtn;
@property(nonatomic, retain)CartAnimation* cartAnimation;

-(void)init1mallWebView;
-(void)switchType:(id)sender;
@end

@implementation MyFavorite


@synthesize currentState;
@synthesize delProductId, myFavoritePage,mallListWebView , yihaodianTypeBtn, mallTypeBtn;
@synthesize cartAnimation;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    // Release any cached data, images, etc that aren't in use.
}

- (void)viewDidLoad {
    [super viewDidLoad];
	[UIView setAnimationsEnabled:NO];
    cartAnimation = [[CartAnimation alloc]init:self.view];
    
    //标题栏
    UIImageView *imageView=[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];
    [imageView setImage:[UIImage imageNamed:@"title_bg.png"]];
    [self.view addSubview:imageView];
    [imageView release];
    
    UIButton *returnBtn=[[UIButton alloc] initWithFrame:CGRectMake(0, 0, 61, 44)];
    [returnBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn.png"] forState:UIControlStateNormal];
    [returnBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn_sel.png"] forState:UIControlStateHighlighted];
    [returnBtn addTarget:self action:@selector(back) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:returnBtn];
    [returnBtn release];
    
    editBtn=[[UIButton alloc] initWithFrame:CGRectMake(259, 0, 61, 44)];
    [editBtn setBackgroundImage:[UIImage imageNamed:@"title_edit.png"] forState:UIControlStateNormal];
    [editBtn setBackgroundImage:[UIImage imageNamed:@"title_edit_sel.png"] forState:UIControlStateHighlighted];
    [editBtn addTarget:self action:@selector(editMode:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:editBtn];
    [editBtn setHidden:YES];
    
    UILabel *title=[[UILabel alloc] initWithFrame:CGRectMake(100, 0, 120, 44)];
    [title setBackgroundColor:[UIColor clearColor]];
    [title setText:@"我的收藏"];
    [title setTextColor:[UIColor whiteColor]];
    [title setFont:[UIFont boldSystemFontOfSize:20.0]];
    [title setTextAlignment:NSTextAlignmentCenter];
    [title setShadowColor:[UIColor darkGrayColor]];
    [title setShadowOffset:CGSizeMake(1, -1)];
    [self.view addSubview:title];
    [title release];
    
	isAnimStop = YES;
    
    //没有收藏时显示的界面
    float h = self.view.frame.size.height -  OTS_IPHONE_NAVI_BAR_HEIGHT - TYPE_SWITCH_HIEGHT;
	noProductView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 320, h)];
	[noProductView setImage:[UIImage imageNamed:@"myFavorite_nil.png"]];
    
	UIImageView *nullImage = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 367)];
	[nullImage setImage:[UIImage imageNamed:@"null_myFavourite.png"]];
    [noProductView addSubview:nullImage];
    [nullImage release];
    
    m_ShowPageCount=1;
    
    // 1mall或yihaodian 收藏种类选择
    self.yihaodianTypeBtn = [[[UIButton alloc]initWithFrame:CGRectMake(0, NAVIGATION_BAR_HEIGHT, ApplicationWidth/2, TYPE_SWITCH_HIEGHT)]autorelease];
    [yihaodianTypeBtn setBackgroundImage:[UIImage imageNamed:@"sort_unsel.png"] forState:UIControlStateNormal];
    [yihaodianTypeBtn setBackgroundImage:[UIImage imageNamed:@"sort_sel.png"] forState:UIControlStateSelected];
    [yihaodianTypeBtn setTitle:@"1号店" forState:UIControlStateNormal];
    [yihaodianTypeBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [yihaodianTypeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
    [yihaodianTypeBtn setSelected:YES];
    [yihaodianTypeBtn setTag:0];
    [yihaodianTypeBtn addTarget:self action:@selector(switchType:) forControlEvents:UIControlEventTouchUpInside];
//    [self.view addSubview:yihaodianTypeBtn];
    self.mallTypeBtn = [[[UIButton alloc]initWithFrame:CGRectMake(ApplicationWidth/2, NAVIGATION_BAR_HEIGHT, ApplicationWidth/2, TYPE_SWITCH_HIEGHT)]autorelease];
    [mallTypeBtn setBackgroundImage:[UIImage imageNamed:@"sort_unsel.png"] forState:UIControlStateNormal];
    [mallTypeBtn setBackgroundImage:[UIImage imageNamed:@"sort_sel.png"] forState:UIControlStateSelected];
    [mallTypeBtn setTitle:@"1号商城" forState:UIControlStateNormal];
    [mallTypeBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [mallTypeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateSelected];
    [mallTypeBtn setTag:1];
    [mallTypeBtn addTarget:self action:@selector(switchType:) forControlEvents:UIControlEventTouchUpInside];
//    [self.view addSubview:mallTypeBtn];
    
    [self init1mallWebView];
    [self initFavoriteTableView];
    
    currentState = MYFAVORITE_STATE;
    running = NO;
    [self setUpThread:YES];
    
//    JSTrackingPrama* prama = [[JSTrackingPrama alloc]initWithJSType:EJStracking_FavouriteList extraPrama:nil];
//    [DoTracking doJsTrackingWithParma:prama];
}
-(void)init1mallWebView{
    self.mallListWebView = [[[UIWebView alloc]initWithFrame:CGRectMake(0, NAVIGATION_BAR_HEIGHT+TYPE_SWITCH_HIEGHT, ApplicationWidth, ApplicationHeight-NAVIGATION_BAR_HEIGHT-TYPE_SWITCH_HIEGHT-TABBAR_HEIGHT)] autorelease];
    [mallListWebView setDelegate:self];
    
    NSData *b64Data = [GTMBase64 encodeData:[[GlobalValue getGlobalValueInstance].token dataUsingEncoding:NSUTF8StringEncoding]];
    NSString* b64Str = [[[NSString alloc] initWithData:b64Data encoding:NSUTF8StringEncoding] autorelease];
    NSString* favURLStr = [NSString stringWithFormat:@"http://m.1mall.com/mw/favlist/1?token=%@&osType=30&provinceId=%@",b64Str, [GlobalValue getGlobalValueInstance].provinceId];
    
    [mallListWebView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:favURLStr]]];
    [mallListWebView setHidden:YES];  // 如此做是为了不在刚进页面的时候显示瞬间的web画面，同table在未加载出来的时候隐藏一个道理有木有
    [self.view addSubview:mallListWebView];
}
-(void)initFavoriteTableView
{
    float h = self.view.frame.size.height -  OTS_IPHONE_NAVI_BAR_HEIGHT /* - TYPE_SWITCH_HIEGHT*/; //类型转换按钮去掉
    
    m_TableView = [[UITableView alloc] initWithFrame:CGRectMake(0, NAVIGATION_BAR_HEIGHT+TYPE_SWITCH_HIEGHT, self.view.frame.size.width, h)];
    m_TableView.delegate = self;
    m_TableView.dataSource = self;
    [self.view addSubview:m_TableView];
    [m_TableView setHidden:YES];
    
	backView = [[BackToTopView alloc] init];
	[self.view addSubview:backView];
}
-(void)switchType:(id)sender{
    UIButton* btn = (UIButton*)sender;
    if (btn.isSelected) {
        return;
    }else{
        mallTypeBtn.selected = NO;
        yihaodianTypeBtn.selected = NO;
        [btn setSelected:YES];
    }
    switch (btn.tag) {
        case 0:
            [self.view bringSubviewToFront:m_TableView];
            [editBtn setHidden:NO];
            break;
        case 1:
            [self.view bringSubviewToFront:mallListWebView];
            [editBtn setHidden:YES];
            [mallListWebView setHidden:NO];     // 如此做是为了不在刚进页面的时候显示瞬间的web画面，同table在未加载出来的时候隐藏一个道理有木有
            break;
        default:
            break;
    }
}

#pragma mark 进入／退出编辑模式
-(void)editMode:(id)sender{
//	UIButton *btn = (UIButton*)sender;
	if (m_TableView.isEditing) {
		[m_TableView setEditing:NO];
		//[btn setTitle:@"编辑" forState:0];
        [editBtn setBackgroundImage:[UIImage imageNamed:@"title_edit.png"] forState:UIControlStateNormal];
        [editBtn setBackgroundImage:[UIImage imageNamed:@"title_edit_sel.png"] forState:UIControlStateHighlighted];
		[m_TableView reloadData];
	}else {
		[m_TableView setEditing:YES];
		//[btn setTitle:@"完成" forState:0];
        [editBtn setBackgroundImage:[UIImage imageNamed:@"title_done.png"] forState:UIControlStateNormal];
        [editBtn setBackgroundImage:[UIImage imageNamed:@"title_done_sel.png"] forState:UIControlStateHighlighted];
		[m_TableView reloadData];
	}

}
#pragma mark 弹出提示框
-(void)showAlertView:(NSString *)alertTitle alertMsg:(NSString *)alertMsg alertTag:(int)tag {
    [[GlobalValue getGlobalValueInstance] setHaveAlertViewInShow:YES];
    UIAlertView * alert = [[OTSAlertView alloc] initWithTitle:alertTitle message:alertMsg delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定",nil];
    alert.tag = tag;
	[alert show];
	[alert release];
	alert = nil;
}

-(void)showError:(NSString *)errorInfo
{
    [AlertView showAlertView:nil alertMsg:errorInfo buttonTitles:nil alertTag:ALERTVIEW_TAG_COMMON];
}

#pragma mark 开启线程
-(void)setUpThread:(BOOL)showLoading {
    if (!running)
    {
		running=YES;
		if ([GlobalValue getGlobalValueInstance].ywToken!=nil) {
            if (showLoading)
            {
                [self showLoading:showLoading];
            }
			[self otsDetatchMemorySafeNewThreadSelector:@selector(startThread) toTarget:self withObject:nil];
		}
	}
}

#pragma mark 开启线程
-(void)startThread{

    DebugLog(@"startThread");

    while (running) {		
		switch (self.currentState) {
                
			case MYFAVORITE_STATE://我的收藏
			{    
				NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
                
                YWFavoriteService *myFavorite=[[YWFavoriteService alloc] init];
				@try
                {
                    
                    NSDictionary *dic = @{  @"userid" : [GlobalValue getGlobalValueInstance].userInfo.ecUserId,
                                            @"pageindex":@"1",
                                            @"pagesize":@"10",
                                            @"token":[GlobalValue getGlobalValueInstance].ywToken,
                                            @"userid": [GlobalValue getGlobalValueInstance].userInfo.ecUserId,
                                            @"username":[GlobalValue getGlobalValueInstance].userInfo.uid
                                            };
                    FavoriteResultInfo *favoriteResult = [myFavorite getMyFavoriteList:dic];
                    self.favoriteList = favoriteResult.favoriteList;
                    favoriteCellNum = favoriteResult.totalCount;
                    [self performSelectorOnMainThread:@selector(updateFavoriteTableView) withObject:nil waitUntilDone:NO];
                    [m_TableView performSelectorOnMainThread:@selector(setTableFooterView:) withObject:nil waitUntilDone:NO];
                    m_LoadingMore=NO;
					[self stopThread];
                }
                
			/*	FavoriteService *myFavorite=[[FavoriteService alloc] init];
				@try
                {
					self.myFavoritePage=[[myFavorite getMyFavoriteList:[GlobalValue getGlobalValueInstance].token tag:nil currentPage:[NSNumber numberWithInt:1] pageSize:[NSNumber numberWithInt:10*m_ShowPageCount]] retain];
					if (![myFavoritePage isKindOfClass:[NSNull class]])
                    {
						favoriteCellNum=[myFavoritePage.totalSize intValue];//获得总数
                        [self performSelectorOnMainThread:@selector(updateFavoriteTableView) withObject:nil waitUntilDone:NO];
					}
                    [m_TableView performSelectorOnMainThread:@selector(setTableFooterView:) withObject:nil waitUntilDone:NO];
                    m_LoadingMore=NO;
					[self stopThread];
				}*/
				@catch (NSException * e)
                {
					
				}
				@finally
                {
					[myFavorite release];
					myFavorite=nil;
				}
				[pool drain];
			}
				break;
                
			case FAVORITE_DEL_STATE://删除收藏
			{
                DebugLog(@"del favorite id %d",self.delProductId);

                NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
                
                YWFavoriteService *favSer = [[YWFavoriteService alloc] init];
                NSDictionary *dic = @{  @"ids" :[NSString stringWithFormat:@"%d",self.delProductId],
                                        @"userid":[GlobalValue getGlobalValueInstance].userInfo.ecUserId,
                                        @"token":[GlobalValue getGlobalValueInstance].ywToken,
                                        @"userid": [GlobalValue getGlobalValueInstance].userInfo.ecUserId,
                                        @"username":[GlobalValue getGlobalValueInstance].userInfo.uid
                                        };
                BOOL result = [favSer delFavorite:dic];
                
                [favSer release];
                [self stopThread];
                if (result)
                {
                    currentState=MYFAVORITE_STATE;
                }
                [self setUpThread:YES];
				[pool drain];
                
                
                
                //原版
				/*NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
                 FavoriteService *favoriteService=[[FavoriteService alloc] init];
                int index=[favoriteService delFavorite:[GlobalValue getGlobalValueInstance].token productId:[NSNumber numberWithInt:self.delProductId]];
                [favoriteService release];
                [self stopThread];
                if (index==1) {
                    currentState=MYFAVORITE_STATE;
                }
                [self setUpThread:YES];
				[pool drain];*/
			}
				break;
		    case FAVORITE_BUY_STATE:
			{
			 NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];
			 favoriteVo=[myFavoritePage.objList objectAtIndex:currentActionIndex];
			 ProductVO *productVO=favoriteVo.product;
				// 购物操作流程
				if ([GlobalValue getGlobalValueInstance].token != nil)
                {
                    // 购物调用addProduct接口
					int proId = [productVO.productId intValue];				// 获得商品号
					int merchanId = [productVO.merchantId intValue];		//获得商户号
                    
					CartService * cSer = [[[CartService alloc] init] autorelease];
                    
					AddProductResult *result=[cSer addSingleProduct:[GlobalValue getGlobalValueInstance].token productId:[NSNumber numberWithInt:proId] merchantId:[NSNumber numberWithInt:merchanId] quantity:[NSNumber numberWithInt:1] promotionid:@""];
                    if (result!=nil && ![result isKindOfClass:[NSNull class]]) {
                        if ([[result resultCode] intValue]==1) {//成功
                            [self performSelectorOnMainThread:@selector(showBuyProductAnimation) withObject:nil waitUntilDone:NO];
                        } else {
                            [self performSelectorOnMainThread:@selector(showError:) withObject:[result errorInfo] waitUntilDone:NO];
                        }
                    } else {
                        [self performSelectorOnMainThread:@selector(showError:) withObject:@"网络异常，请检查网络配置..." waitUntilDone:NO];
                    }
				}
                else
                {
                    // 购物添加到本地
                    ProductService* helper= [[ProductService alloc] init];
                    ProductVO*product =[helper getProductDetail:[GlobalValue getGlobalValueInstance].trader productId:productVO.productId provinceId:[GlobalValue getGlobalValueInstance].provinceId promotionid:@""];
                    [helper release];

					LocalCartItemVO * localProductVO = [[LocalCartItemVO alloc] initWithProductVO:product quantity:@"1"];
					[SharedDelegate addProductToLocal:localProductVO];
					[self performSelectorOnMainThread:@selector(showBuyProductAnimation) withObject:nil waitUntilDone:YES];
					[localProductVO release];
				}
				[NSThread sleepForTimeInterval:1.5];
				[self stopThread];
				[pool drain];
		}
		break;
			default:
                running = NO;
				break;
		}
	}
    [self performSelectorOnMainThread:@selector(updateFavoriteView) withObject:nil waitUntilDone:NO];
}

#pragma mark 停止线程
-(void)stopThread{
	running=NO;
    //[[NSNotificationCenter defaultCenter] postNotificationName:@"MainWindowHideLoading" object:nil];
    [self hideLoading];
}

-(void)updateFavoriteTableView
{
    [m_TableView setHidden:NO];
    [m_TableView reloadData];
}

-(void)updateFavoriteView{
    if (favoriteCellNum<=0) {
        if ([noProductView superview]==nil) {
            [m_TableView addSubview:noProductView];
        }
        [editBtn setHidden:YES];
    }
    else {
        [noProductView removeFromSuperview];
        [editBtn setHidden:NO];
    }
}

-(void)getMoreFavorite
{
    m_ShowPageCount++;
    currentState=MYFAVORITE_STATE;
    [self setUpThread:NO];
}

#pragma mark scrollView相关delegate
- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
	backView.scrollScreenHeight = 367;
	[backView scrollViewDidScroll:scrollView];
}
- (void)scrollViewDidEndDecelerating:(UIScrollView *)theScrollView{
	[backView scrollViewDidEndDecelerating:theScrollView];
}
- (void)scrollViewDidEndDragging:(UIScrollView *)theScrollView willDecelerate:(BOOL)decelerate{
	[backView scrollViewDidEndDragging:theScrollView willDecelerate:decelerate];
}
- (BOOL)scrollViewShouldScrollToTop:(UIScrollView *)scrollView{
	[backView scrollViewShouldScrollToTop:scrollView];
	return YES;
}

#pragma mark tableView相关deleage和datasource
- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath{
	return UITableViewCellEditingStyleDelete;
}
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
	if (editingStyle == UITableViewCellEditingStyleDelete)
    {
		/*currentState = FAVORITE_DEL_STATE;
		currentActionIndex = [indexPath row];
		favoriteVo = [myFavoritePage.objList objectAtIndex:[indexPath row]];
		ProductVO *productVo = favoriteVo.product;
		self.delProductId =[productVo.productId intValue];//获得商品id
		[self setUpThread:YES];*/
        
        currentState = FAVORITE_DEL_STATE;
		currentActionIndex = [indexPath row];
		FavoriteProductInfo *productVo = [self.favoriteList objectAtIndex:[indexPath row]];;
		self.delProductId =[productVo.pid intValue];//获得商品id
		[self setUpThread:YES];
	}
}
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    return YES;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    int row=[indexPath row];//获得第几行

    FavoriteProductInfo *favoriteInfo = [OTSUtility safeObjectAtIndex:row inArray:self.favoriteList];
    
    
    
//    favoriteVo = [OTSUtility safeObjectAtIndex:row inArray:myFavoritePage.objList];
//    ProductVO *productVO=favoriteVo.product;
    
    CategoryProductCell *cell=(CategoryProductCell*)[tableView dequeueReusableCellWithIdentifier:@"FavoriteCell"];
    if (cell==nil)
    {
        cell=[[[CategoryProductCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"FavoriteCell"] autorelease];
    }

    //商品名称
//    if (productVO.isYihaodian && productVO.isYihaodian.intValue == 0)
//    {
//        cell.productNameLbl.text = [NSString stringWithFormat:@"    %@",favoriteInfo.productName];
//        [cell.the1MallLogo setHidden:NO];
//    }
//    else
//    {
        cell.productNameLbl.text = favoriteInfo.productName;
        [cell.the1MallLogo setHidden:YES];
//    }
    
    //市场价格
//    if (favoriteVo.product.promotionPrice==nil && favoriteVo.product.price==nil) {
//        //新省份没有此商品情况处理
//        cell.priceLbl.hidden = YES;
//        cell.selectionStyle = UITableViewCellSelectionStyleNone;
//    } else {
        cell.priceLbl.hidden = NO;
        cell.selectionStyle = UITableViewCellSelectionStyleBlue;
        cell.priceLbl.text=[NSString stringWithFormat:@"￥%.2f", [favoriteInfo.price floatValue]];
//    }
    
    //商品库存
//    NSString *canBuyStr;
//    if ([productVO.canBuy isEqualToString:@"true"])
//    {
//        canBuyStr=@"有货";
//    }
//    else
//    {
//        canBuyStr=@"已售完";
//    }
//    if (productVO.experienceCount!=nil)
//    {
//        [cell.shoppingCountLbl setText:[NSString stringWithFormat:@"(%@)",productVO.experienceCount]];
//    }
//    else
//    {
//        [cell.shoppingCountLbl setText:@"(0)"];
//    }
//    for (NSUInteger i=0; i<5; i++)
//    {
//        UIImageView *subView=(UIImageView *)[cell.contentView viewWithTag:1000+i];
//        if (i<[[productVO score] intValue])
//        {
//            subView.image=[UIImage imageNamed:@"pentagon_Yellow.png"];
//        }
//    }
//    cell.canBuyLbl.text=canBuyStr;
    //操作按钮
//    if (productVO.isYihaodian && productVO.isYihaodian.intValue == 0) {
//        [cell.operateBtn setFrame:CGRectMake(280, 38, 23, 19)];
//        [cell.operateBtn setImage:[UIImage imageNamed:@"1mall_eye.png"] forState:0];
//        if (tableView.isEditing) {
//            [cell.operateBtn setHidden:YES];
//        } else {
//            [cell.operateBtn setHidden:NO];
//        }
//        [cell.operateBtn removeTarget:self action:NULL forControlEvents:UIControlEventTouchUpInside];
//        [cell.operateBtn setUserInteractionEnabled:NO];
//    }else{
        [cell.operateBtn setUserInteractionEnabled:YES];
        [cell.operateBtn addTarget:self action:@selector(accessoryButtonTap:withEvent:) forControlEvents:UIControlEventTouchUpInside];
        cell.operateBtn.frame=CGRectMake(270, 8, 50, 85);
        //新省份是否有此商品
//        BOOL isRightArea = !(favoriteVo.product.promotionPrice==nil && favoriteVo.product.price==nil);
    
//        if ([productVO.canBuy isEqualToString:@"true"] && isRightArea) {
            [cell.operateBtn setImage:[UIImage imageNamed:@"product_cart.png"] forState:0];
            cell.operateBtn.enabled = YES;
//        } else {
//            cell.operateBtn.enabled = NO;
//            [cell.operateBtn setImage:[UIImage imageNamed:@"product_cart_ni.png"] forState:0];
//        }
        if (tableView.isEditing)
        {
            [cell.operateBtn setHidden:YES];
        } else {
            [cell.operateBtn setHidden:NO];
        }
//    }
    //有赠品
//    if ([[productVO hasGift] intValue]==1) {
//        [cell.giftLogo setHidden:NO];
//    } else {
        [cell.giftLogo setHidden:YES];
//    }
    //商品图片
    cell.imageView.image=[UIImage imageNamed:@"defaultimg85.png"];
    
    if (![favoriteInfo.productImgUrl isKindOfClass:[NSNull class]])
    {
        [cell downloadImage:favoriteInfo.productImgUrl];
    }
    else
    {
        [cell downloadImage:nil];
    }
    
    
    return cell;
    
    //原版
/*    favoriteVo=[OTSUtility safeObjectAtIndex:row inArray:myFavoritePage.objList];
    ProductVO *productVO=favoriteVo.product;
    
    CategoryProductCell *cell=(CategoryProductCell*)[tableView dequeueReusableCellWithIdentifier:@"FavoriteCell"];
    if (cell==nil) {
        cell=[[[CategoryProductCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"FavoriteCell"] autorelease];
    }
    //商品名称
    //cell.productNameLbl.text=productVO.cnName;
    //商品名称
    if (productVO.isYihaodian && productVO.isYihaodian.intValue == 0) {
        cell.productNameLbl.text = [NSString stringWithFormat:@"    %@",productVO.cnName];
        [cell.the1MallLogo setHidden:NO];
    }else{
        cell.productNameLbl.text = productVO.cnName;
        [cell.the1MallLogo setHidden:YES];
    }
    
    //市场价格
    if (favoriteVo.product.promotionPrice==nil && favoriteVo.product.price==nil) {
        //新省份没有此商品情况处理
        cell.priceLbl.hidden = YES;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    } else {
        cell.priceLbl.hidden = NO;
        cell.selectionStyle = UITableViewCellSelectionStyleBlue;
        cell.priceLbl.text=[NSString stringWithFormat:@"￥%.2f",[productVO.price floatValue]];
    }
    
    //商品库存
    NSString *canBuyStr;
    if ([productVO.canBuy isEqualToString:@"true"]) {
        canBuyStr=@"有货";
    } else {
        canBuyStr=@"已售完";
    }
    if (productVO.experienceCount!=nil) {
        [cell.shoppingCountLbl setText:[NSString stringWithFormat:@"(%@)",productVO.experienceCount]];
    } else {
        [cell.shoppingCountLbl setText:@"(0)"];
    }
    for (NSUInteger i=0; i<5; i++) {
        UIImageView *subView=(UIImageView *)[cell.contentView viewWithTag:1000+i];
        if (i<[[productVO score] intValue]) {
            subView.image=[UIImage imageNamed:@"pentagon_Yellow.png"];
        }
    }
    cell.canBuyLbl.text=canBuyStr;
    //操作按钮
    if (productVO.isYihaodian && productVO.isYihaodian.intValue == 0) {
        [cell.operateBtn setFrame:CGRectMake(280, 38, 23, 19)];
        [cell.operateBtn setImage:[UIImage imageNamed:@"1mall_eye.png"] forState:0];
        if (tableView.isEditing) {
            [cell.operateBtn setHidden:YES];
        } else {
            [cell.operateBtn setHidden:NO];
        }
        [cell.operateBtn removeTarget:self action:NULL forControlEvents:UIControlEventTouchUpInside];
        [cell.operateBtn setUserInteractionEnabled:NO];
    }else{
        [cell.operateBtn setUserInteractionEnabled:YES];
        [cell.operateBtn addTarget:self action:@selector(accessoryButtonTap:withEvent:) forControlEvents:UIControlEventTouchUpInside];
        cell.operateBtn.frame=CGRectMake(270, 8, 50, 85);
        //新省份是否有此商品
        BOOL isRightArea = !(favoriteVo.product.promotionPrice==nil && favoriteVo.product.price==nil);

        if ([productVO.canBuy isEqualToString:@"true"] && isRightArea) {
            [cell.operateBtn setImage:[UIImage imageNamed:@"product_cart.png"] forState:0];
            cell.operateBtn.enabled = YES;
        } else {
            cell.operateBtn.enabled = NO;
            [cell.operateBtn setImage:[UIImage imageNamed:@"product_cart_ni.png"] forState:0];
        }
        if (tableView.isEditing) {
            [cell.operateBtn setHidden:YES];
        } else {
            [cell.operateBtn setHidden:NO];
        }
    }
    //有赠品
    if ([[productVO hasGift] intValue]==1) {
        [cell.giftLogo setHidden:NO];
    } else {
        [cell.giftLogo setHidden:YES];
    }
    //商品图片
    cell.imageView.image=[UIImage imageNamed:@"defaultimg85.png"];
    [cell downloadImage:productVO.miniDefaultProductUrl];
    
    return cell;*/
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
	[tableView deselectRowAtIndexPath:indexPath animated:YES];//取消选中颜色
    
    int row=[indexPath row];

    FavoriteProductInfo *productVO = [self.favoriteList objectAtIndex:row];
    //新省份没有此商品情况处理
    
    OTSProductDetail *productDetail=[[[OTSProductDetail alloc] initWithProductId:[productVO.pid longLongValue] promotionId:nil fromTag:PD_FROM_FAVORITE] autorelease];
    [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
    [self pushVC:productDetail animated:YES];
    
    
/*    int row=[indexPath row];
    favoriteVo=[myFavoritePage.objList objectAtIndex:row];
    ProductVO *productVO=favoriteVo.product;
    //新省份没有此商品情况处理
    if (favoriteVo.product.promotionPrice==nil && favoriteVo.product.price==nil)
    {
        return;
    }
    if (productVO.isYihaodian && productVO.isYihaodian.intValue == 0)
    {
        // 1MALL的商品
        DebugLog(@"enter 1mall!!!!");
        NSString *urlStr;
        NSString* landingPageId;
        if (productVO.promotionId) {
            landingPageId = productVO.promotionId;
        }else{
            landingPageId = @"";
        }
        if ([GlobalValue getGlobalValueInstance].token == nil) {
            urlStr = [URL_BASE_MALL_NO_ONE stringByAppendingFormat:@"%@/%@/%@?osType=30",productVO.productId,[GlobalValue getGlobalValueInstance].provinceId,landingPageId];
        }else {
            // 对 token 进行base64加密
            NSData *b64Data = [GTMBase64 encodeData:[[GlobalValue getGlobalValueInstance].token dataUsingEncoding:NSUTF8StringEncoding]];
            NSString* b64Str = [[[NSString alloc] initWithData:b64Data encoding:NSUTF8StringEncoding] autorelease];
            
            urlStr = [URL_BASE_MALL_NO_ONE stringByAppendingFormat:@"%@/%@/%@?token=%@&osType=30",productVO.productId,[GlobalValue getGlobalValueInstance].provinceId,landingPageId,b64Str];
            
        }
        DebugLog(@"enterWap -- url is:\n%@",urlStr);
        [SharedDelegate enterWap:5 invokeUrl:urlStr isClearCookie:YES];
    }
    else
    {
        OTSProductDetail *productDetail=[[[OTSProductDetail alloc] initWithProductId:[productVO.productId longValue] promotionId:productVO.promotionId fromTag:PD_FROM_FAVORITE] autorelease];
        [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
        [self pushVC:productDetail animated:YES];
    }
    */
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 105;
}

-(NSInteger)tableView:(UITableView *)table numberOfRowsInSection:(NSInteger)section{
//    return [myFavoritePage.objList count];
    return self.favoriteList.count;
}

-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.row==[myFavoritePage.objList count]-1 && [myFavoritePage.objList count]<favoriteCellNum) {
        if (!m_LoadingMore) {
            [tableView loadingMoreWithFrame:CGRectMake(0, 0, tableView.frame.size.width, 40) target:self selector:@selector(getMoreFavorite) type:UITableViewLoadingMoreForeIphone];
            m_LoadingMore=YES;
        }
    }
}
#pragma mark webView delegate
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType{
    NSString* urlStr = [[request URL]absoluteString];
    NSRange keyWord = [urlStr rangeOfString:@"http://m.1mall.com/mw/product"];
    if (keyWord.location != NSNotFound) {
        [SharedDelegate enterWap:5 invokeUrl:urlStr isClearCookie:NO];
        return NO;
    }
    keyWord = [urlStr rangeOfString:@"http://m.1mall.com/mw/sort"];
    if (keyWord.location != NSNotFound) {
        [SharedDelegate enterCategory];
        return NO;
    }
    return YES;
}
- (void)webViewDidStartLoad:(UIWebView *)webView{
    
}
- (void)webViewDidFinishLoad:(UIWebView *)webView{
    
}
- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error{
    
}
#pragma mark 返回方法
-(void)back{
    if (fromTag == FROM_CART_TO_FAVORITE) {
        [SharedDelegate enterCartRoot];
    } else if (fromTag == FROM_HOMEPAGE_TO_FAVORITE) {
        [SharedDelegate enterHomePageRoot];
        HomePage *homePage = [SharedDelegate.tabBarController.viewControllers objectAtIndex:0];
        [homePage setUniqueScrollToTopFor:homePage->m_ScrollView];
    }
	
	CATransition * animation = [CATransition animation];
    animation.duration = 0.3f;
    [animation setType:kCATransitionPush];
    [animation setSubtype: kCATransitionFromLeft];
    [self.view.superview.layer addAnimation:animation forKey:@"Reveal"];
    [self removeSelf];
}

#pragma mark 响应收藏列表按钮事件
-(void)accessoryButtonTap:(UIControl *)button withEvent:(UIEvent *)event{	
	NSIndexPath *indexPath=[m_TableView indexPathForRowAtPoint:[[[event touchesForView:button] anyObject] 
																	  locationInView:m_TableView]];//获得NSIndexPath
	if (indexPath==nil) {
		return;
	}else {
		currentActionIndex=[indexPath row];//获得选择的第几行
		//[self showSheetView];
		favoriteVo=[myFavoritePage.objList objectAtIndex:currentActionIndex];
		ProductVO *productVO=favoriteVo.product;
        if (favoriteVo.product.promotionPrice==nil && favoriteVo.product.price==nil)
        {
            [self showAlertView:nil alertMsg:@"很抱歉,该商品在该地区暂不销售" alertTag:ALERTVIEW_TAG_OTHERS];
        }
		else if ([productVO.canBuy isEqualToString:@"true"]) {
			currentState = FAVORITE_BUY_STATE;
			[self setUpThread:NO];
		} else {
			[self showAlertView:nil alertMsg:@"很抱歉,该商品已经卖光啦!你可以收藏商品,下次购买" alertTag:ALERTVIEW_TAG_OTHERS];
		}
        //[DoTracking doTracking:[NSString stringWithFormat:@"cartAdd_%@_%@",[GlobalValue getGlobalValueInstance].provinceId,[productVO productId]]];//加入购物车数据统计
        JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AddCart extraPramaDic:nil]autorelease];
        [prama setProductId:productVO.productId];
        [prama setMerchant_id:[NSString stringWithFormat:@"%@",productVO.merchantId]];
        [DoTracking doJsTrackingWithParma:prama];
	}
}

#pragma mark 显示收藏Sheet列表
-(void)showSheetView{
	UIActionSheet *sheet=[[OTSActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"取消" 
									   destructiveButtonTitle:nil 
											otherButtonTitles:@"删除收藏", @"查看详情",nil];
	[sheet showInView:[UIApplication sharedApplication].keyWindow];
	[sheet release];
	sheet=nil;
}
#pragma mark UIActionSheet回调函数
- (void)actionSheet:(UIActionSheet *)actionSheet didDismissWithButtonIndex:(NSInteger)buttonIndex{	
	switch (buttonIndex) {
        case 0:// 删除			 
            currentState=FAVORITE_DEL_STATE;
            int row=currentActionIndex;
            favoriteVo=[myFavoritePage.objList objectAtIndex:row];
            ProductVO *productVo=favoriteVo.product;
            self.delProductId =[productVo.productId intValue];//获得商品id

            [self setUpThread:YES];
            break;
        case 1: {	//查看详情
            int row=currentActionIndex;
            favoriteVo=[myFavoritePage.objList objectAtIndex:row];
            
            ProductVO *productVO=favoriteVo.product;
            
            OTSProductDetail *productDetail=[[[OTSProductDetail alloc] initWithProductId:[productVO.productId longValue] promotionId:productVO.promotionId fromTag:PD_FROM_FAVORITE] autorelease];
            [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
            [self pushVC:productDetail animated:YES];
            break;
        }
        default:
            break;
    }
}
#pragma mark    购物车动画
-(void)showBuyProductAnimation {
	[self startAnimation];
    [SharedDelegate setCartNum:1];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"CartChanged" object:nil];
    
}

-(void)startAnimation {
    ProductVO * productVO = favoriteVo.product;
    NSString* imageURLStr = [productVO miniDefaultProductUrl];
    
    // 算出对应的图片坐标
    UITableViewCell* cell = [m_TableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:currentActionIndex inSection:0]];
    CGPoint point = cell.imageView.center;
    point = [cell.imageView convertPoint:point toView:self.view];
    
    UIImageView* imageV = [[[UIImageView alloc]init]autorelease];
    [imageV setImageWithURL:[NSURL URLWithString:imageURLStr] refreshCache:NO placeholderImage:[UIImage imageNamed:@"defaultimg76"]];
    
    [cartAnimation beginCartAnimationWithProductImageView:imageV point:point];
    
	if (isAnimStop) {
		[SharedDelegate showAddCartAnimationWithDelegate:self];
		isAnimStop=NO;
	}
}

-(void)animationFinished
{
    isAnimStop=YES;
}

- (void)viewDidUnload
{
    if (myFavoritePage!=nil) {
        [myFavoritePage release];
        myFavoritePage=nil;
    }
    if (noProductView!=nil) {
        [noProductView release];
        noProductView=nil;
    }
    if (m_TableView!=nil) {
        [m_TableView release];
        m_TableView=nil;
    }
	if (backView!=nil) {
        [backView release];
        backView=nil;
    }
    OTS_SAFE_RELEASE(editBtn);
    OTS_SAFE_RELEASE(mallListWebView);
    OTS_SAFE_RELEASE(mallTypeBtn);
    OTS_SAFE_RELEASE(yihaodianTypeBtn);
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}
- (void)dealloc
{
    if (myFavoritePage!=nil) {
        [myFavoritePage release];
        myFavoritePage=nil;
    }
    if (noProductView!=nil) {
        [noProductView release];
        noProductView=nil;
    }
    if (m_TableView!=nil) {
        [m_TableView release];
        m_TableView=nil;
    }
	if (backView!=nil) {
        [backView release];
        backView=nil;
    }
    OTS_SAFE_RELEASE(editBtn);
    OTS_SAFE_RELEASE(mallListWebView);
    OTS_SAFE_RELEASE(mallTypeBtn);
    OTS_SAFE_RELEASE(yihaodianTypeBtn);
    OTS_SAFE_RELEASE(cartAnimation);
    [super dealloc];
}
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
