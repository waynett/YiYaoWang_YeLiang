//
//  HomePage.m
//  TheStoreApp
//
//  Created by jiming huang on 12-7-27.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "ScanResult.h"
#import "Trader.h"
#import "HomePage.h"
#import "ProductService.h"
#import "GlobalValue.h"
#import "Trader.h"
#import "ProductVO.h"
#import "MyStoreViewController.h"
#import "UserManage.h"
#import "CategoryViewController.h"
#import "LocalCartService.h"
#import <QuartzCore/QuartzCore.h>
#import "ZBarReaderViewController.h"
#import "ZBarImageScanner.h"
#import "SystemService.h"
#import "DownloadVO.h"
#import "CentralMobileFacadeService.h"
#import "UIDeviceHardware.h"
#import "UserService.h"
#import "CartVO.h"
#import "CartService.h"
#import "HotPointVO.h"
#import "TheStoreAppAppDelegate.h"
#import "DeviceUtil.h"
#import "ImageCache.h"
#import "MyOrder.h"
#import <MobileCoreServices/MobileCoreServices.h>
#import "ErrorStrings.h"
#import "LocalCartItemVO.h"
#import "AdvertisementVO.h"
#import "AdvertisementServer.h"
#import "DataController.h"
#import "HomeModuleVO.h"
#import "Scan.h"
#import "DoTracking.h"
#import "AlertView.h"
#import "LocalCartItemVO.h"
#import "OTSAlertView.h"
#import "HotPointNewVO.h"
#import "OTSMaterialFLowVC.h"
#import "GroupBuyHomePage.h"
#import "OTSSearchView.h"
#import "OTSAdModelAView.h"
#import "AdvertisingPromotionVO.h"
#import "OTSAdModelBView.h"
#import "NSString+MD5Addition.h"
#import "BrowseService.h"
#import "OTSProductDetail.h"
#import "OTSNNPiecesVC.h"
#import "SDImageView+SDWebCache.h"
#import "BrandStoreViewController.h"
#import "MyBrowse.h"
#import "TheStoreAppAppDelegate.h"
#import "SDButton+SDWebCache.h"
#import "CategoryProductsViewController.h"
#import "GTMBase64.h"
#import "GPSUtil.h"
#import "BaseService.h"
#import "ResponseInfo.h"
#import "AdFloorInfo.h"

#import "YWProductService.h"
#import "SpecialRecommendInfo.h"

#import "YWSearchService.h"

#define TRADER [GlobalValue getGlobalValueInstance].trader

#define ALERT_TAG_FORCEUPDATE_TRUE 101			// 强制更新
#define ALERT_TAG_FORCEUPDATE_FALSE 102			// 非强制更新
#define ALERT_TAG_APP_FIRST_LAUNCH 105
#define ALERT_TAG_APP_START_LAUNCH 106
#define ALERT_TAG_APP_WAKE  107

#define VIEW_TAG_SEL_PROVINCE_BUTTON            1014
#define TAG_MODULE_IMAGE_VIEW                   1020
#define TAG_MODEL_A_TOP                         300
#define TAG_MODEL_B_TOP                         301
#define moduleTag 302
#define MODEAL_IMAGE_WIDTH  59
#define MODEAL_IMAGE_HEIGHT 59

@interface HomePage()

-(void)saveAdModulesToLocal:(AdvertisingPromotion *)adPromotion;
-(NSMutableDictionary *)getAdModulesFromLocal;
@end

@implementation HomePage

@synthesize m_CurrentProvinceStr,m_NewProvinceStr;
@synthesize modelATable;

#pragma mark    自动登录
//新线程自动登录
-(void)newThreadAutoLogin
{
    BOOL autoLoginResult=[[OTSUserLoginHelper sharedInstance] autoLogin];
    if (autoLoginResult)
    {//登录成功
        if ([[[UserManageTool sharedInstance] GetUnionLogin] isEqualToString:@"UNIONLOGIN"])
        {
            [[GlobalValue getGlobalValueInstance] setNickName:[[UserManageTool sharedInstance] GetNickName]];
            [[GlobalValue getGlobalValueInstance] setUserImg:[[UserManageTool sharedInstance] GetUserImg]];
            [[GlobalValue getGlobalValueInstance] setUserName:[[UserManageTool sharedInstance] GetUserName]];
            [[GlobalValue getGlobalValueInstance] setIsUnionLogin:YES];
        }
        //更新购物车
        CartService *service = [[[CartService alloc] init] autorelease];
        int ProNumber = [service countSessionCart:[GlobalValue getGlobalValueInstance].token siteType:[NSNumber numberWithInt:1]];
        
        //        if (carVo && ![carVo isKindOfClass:[NSNull class]])
        //        {
        //            ProNumber = [carVo.totalquantity intValue];
        //        }
        
        [SharedDelegate clearCartNum];
        if (ProNumber > 0)
        {
            [SharedDelegate setCartNum:ProNumber];
        }
        [[NSNotificationCenter defaultCenter] postNotificationName:@"CartChanged" object:nil];
    }
    else
    {//登录失败
        if ([[[UserManageTool sharedInstance] GetUnionLogin] isEqualToString:@"UNIONLOGIN"])
        {
            [[GlobalValue getGlobalValueInstance] setNickName:nil];
            [[GlobalValue getGlobalValueInstance] setUserImg:nil];
            [[GlobalValue getGlobalValueInstance] setIsUnionLogin:NO];
        }
    }
}

-(void)viewDidLoad {
    [super viewDidLoad];
//    [self otsDetatchMemorySafeNewThreadSelector:@selector(test) toTarget:self withObject:nil];
    [self initHomePage];
}

- (void)test
{
    YWSearchService *searchSer = [[YWSearchService alloc] init];
    [searchSer getSearchProductList];
}

//初始化数据
-(void)initData
{
    m_CelebrateView=[[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 460)];
	m_CelebrateWebView=[[UIWebView alloc] initWithFrame:CGRectMake(0, 44, 320, 367)];
	[[GlobalValue getGlobalValueInstance] setWidth:self.view.frame.size.width];
	[[GlobalValue getGlobalValueInstance] setHeight:self.view.frame.size.height];
	//首页搜索
    m_Search=[[Search alloc] init];
    [[NSBundle mainBundle] loadNibNamed:@"Search" owner:m_Search options:nil];
    isAnimStop=YES;
	[UIView setAnimationsEnabled:NO];
    //购物车数量
	if ([GlobalValue getGlobalValueInstance].token==nil) {
		LocalCartService *localCartServ=[[LocalCartService alloc] init];
        int cartNum = [localCartServ getLocalCartNumberFromSqlite3];
		[SharedDelegate clearCartNum];
		if (cartNum>0) {
            [SharedDelegate setCartNum:cartNum];
		}
        [[NSNotificationCenter defaultCenter] postNotificationName:@"CartChanged" object:nil];
		[localCartServ release];
	}
	//获取省份字典和当前省份字串
	NSString *listPath=[[NSBundle mainBundle] pathForResource:@"ProvinceID" ofType:@"plist"];
	m_ProvinceDic=[[NSDictionary alloc] initWithContentsOfFile:listPath];
	NSArray *paths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);
	NSString *path=[paths objectAtIndex:0];
	NSString *filename=[path stringByAppendingPathComponent:@"SaveProvinceId.plist"];
	NSMutableArray *userProvinceArray=[[NSMutableArray alloc] initWithContentsOfFile:filename];
	self.m_CurrentProvinceStr=[OTSUtility safeObjectAtIndex:0 inArray:userProvinceArray];
    [userProvinceArray release];
    
    
    //获取缓存广告模块 -- 楼层广告
    NSMutableDictionary *mDictionary=[self getAdModulesFromLocal];
    NSNumber *provinceId=[mDictionary objectForKey:@"provinceId"];
//    if ([[GlobalValue getGlobalValueInstance].provinceId intValue]==[provinceId intValue]) {
//        if ([mDictionary objectForKey:@"updateTag"]==nil) {
//            m_UpdateTag=[[NSString alloc] initWithString:@""];
//        } else {
//            m_UpdateTag=[[NSString alloc] initWithString:[mDictionary objectForKey:@"updateTag"]];
//        }
//        //升级老版本缓存
//        AdvertisingPromotion *advertisingPromotion=[AdvertisingPromotion voFromDictionary:mDictionary];
//        AdvertisingPromotionVO*advProVO=[OTSUtility safeObjectAtIndex:0 inArray:[advertisingPromotion advertisingPromotionVOList]];
//        if (advProVO.title==nil) {
//            m_UpdateTag=@"";
//        }
//        m_AdArray=[[NSMutableArray alloc] initWithArray:[advertisingPromotion advertisingPromotionVOList]];
//    }
    
    // 获取轮播图缓存
    Page* page = [self getPagesFromLocal];
    
    if (page && page.objList.count > 0)
    {
        hotTopFivePage = [page retain];
    }
    
    if (m_AdArray!=nil)
    {
        [m_AdArray release];
    }
    m_AdArray = [page.adFloorList retain];
    NSLog(@"m_Adarray -- > %@",m_AdArray);
    
}

//建立新线程
-(void)setUpNewThread
{
    //获取热销图
    [self otsDetatchMemorySafeNewThreadSelector:@selector(newThreadGetHotPage) toTarget:self withObject:nil];
    //新线程获取广告模块
    //    [self otsDetatchMemorySafeNewThreadSelector:@selector(netThreadGetAdvertisementModel) toTarget:self withObject:nil];
	//是否需要版本更新
    [self otsDetatchMemorySafeNewThreadSelector:@selector(newThreadVersionUpdate) toTarget:self withObject:nil];
    //自动登录
    if ([[[UserManageTool sharedInstance] GetAutoLoginStatus] isEqualToString:@"1"]) {
        [self otsDetatchMemorySafeNewThreadSelector:@selector(newThreadAutoLogin) toTarget:self withObject:nil];
    }
    //
    //功能模块
//    [self otsDetatchMemorySafeNewThreadSelector:@selector(freshFunctionModules) toTarget:self withObject:nil];
}

//初始化首页UI
-(void)initHomePageUI {
    //    [self.view setBackgroundColor:[UIColor colorWithRed:223.0/255.0 green:223.0/255.0 blue:223.0/255.0 alpha:1.0]];
    CGFloat yValue=0.0;
    //logo栏
    UIImageView *titleView=[[UIImageView alloc]initWithFrame:CGRectMake(0,yValue,320,44)];
    [titleView setImage:[UIImage imageNamed:@"title_bg.png"]];
    [self.view addSubview:titleView];
    [titleView release];
    yValue+=44.0;
    
    UIImageView *logoDescribeView=[[UIImageView alloc]initWithFrame:CGRectMake(138,1,45,41)];
	logoDescribeView.image=[UIImage imageNamed:@"homepage_logo.png"];
	[self.view addSubview:logoDescribeView];
	[logoDescribeView release];
    
    //logo栏-选择省份按钮
	UIButton *selectedProvince=[[UIButton alloc]initWithFrame:CGRectMake(0, 0, 61, 44)];
    [selectedProvince setTag:VIEW_TAG_SEL_PROVINCE_BUTTON];
    [selectedProvince setTitleEdgeInsets:UIEdgeInsetsMake(0, 11, 0, 0)];
    
	if(m_CurrentProvinceStr==nil || [m_CurrentProvinceStr isEqualToString:@""])
    {
        //如果未切换过省份
		[selectedProvince setTitle:@"上海" forState:UIControlStateNormal];
		self.m_CurrentProvinceStr=[[[NSString alloc] initWithString:@"上海"] autorelease];
	}
    else
    {
		[selectedProvince setTitle:m_CurrentProvinceStr forState:0];
	}
    [selectedProvince setBackgroundImage:[UIImage imageNamed:@"title_GPS_btn.png"] forState:UIControlStateNormal];
    [selectedProvince setBackgroundImage:[UIImage imageNamed:@"title_GPS_btn_sel.png"] forState:UIControlStateHighlighted];
	selectedProvince.titleLabel.font=[UIFont boldSystemFontOfSize:13.0];
    [selectedProvince.titleLabel setTextAlignment:NSTextAlignmentLeft];
	selectedProvince.titleLabel.shadowColor = [UIColor darkGrayColor];
	selectedProvince.titleLabel.shadowOffset = CGSizeMake(1.0, -1.0);
	[selectedProvince setTitleColor:[UIColor whiteColor] forState:0];
	[selectedProvince addTarget:self action:@selector(enterSwitchProvince) forControlEvents:UIControlEventTouchUpInside];
	[self.view addSubview:selectedProvince];
    [selectedProvince release];
	
    //搜索
	OTSSearchView *searchView=[[OTSSearchView alloc] initWithFrame:CGRectMake(0, yValue, 320, 40) delegate:m_Search];
    [self.view addSubview:searchView];
    [searchView release];
    yValue+=40.0;
    
    //scroll view
	m_ScrollView=[[UIScrollView alloc] initWithFrame:CGRectMake(0,yValue,320,327)];
    if (iPhone5) {
        [m_ScrollView setFrame:CGRectMake(0,yValue,320,327+88)];
    }
	[m_ScrollView setBackgroundColor:[UIColor clearColor]];
    //    [m_ScrollView setDelaysContentTouches:NO];
    [m_ScrollView setShowsVerticalScrollIndicator:NO];
    [m_ScrollView setScrollsToTop:NO];
    [m_ScrollView setAlwaysBounceVertical:YES];
    [m_ScrollView setDelegate:self];
	[self.view addSubview:m_ScrollView];
    
    //下拉刷新控件
    if (m_RefreshHeaderView!=nil) {
        [m_RefreshHeaderView release];
    }
    m_RefreshHeaderView=[[EGORefreshTableHeaderView alloc] initWithFrame:CGRectMake(0, -m_ScrollView.bounds.size.height, 320, m_ScrollView.bounds.size.height)];
    m_RefreshHeaderView.delegate=self;
    [m_ScrollView addSubview:m_RefreshHeaderView];
    [m_RefreshHeaderView refreshLastUpdatedDate];
    
    //page view
    CGFloat yValueInScroll=0.0;
    m_PageView=[[OTSPageView alloc] initWithFrame:CGRectMake(0, yValueInScroll, 320, 120) delegate:self showStatusBar:YES sleepTime:5];
    [m_ScrollView addSubview:m_PageView];
    
    //yValueInScroll+=120.0;
    
    // 功能模块
    [self initFunctionModules];
    
    // 广告模块
    if (m_AdArray!=nil&&m_AdArray.count>0) {
//        [self updateCMSModuleA];
    }
    
	[self setUniqueScrollToTopFor:m_ScrollView];
}

//首页初始化
-(void)initHomePage
{
	[self initData];
    [self initHomePageUI];
    [self setUpNewThread];
//
//    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_HomePage extraPramaDic:nil]autorelease];
//    [DoTracking doJsTrackingWithParma:prama];
}

//刷新首页数据
-(void)refreshHomePageData
{
    //刷新热销图
    if (!isRefreshingHotPage && !isRefreshingAd) {
        isRefreshingHotPage=YES;
        isRefreshingAd = YES;
        [self otsDetatchMemorySafeNewThreadSelector:@selector(newThreadGetHotPage) toTarget:self withObject:nil];
    }
    //刷新广告模块
//    if (!isRefreshingAd) {
//        isRefreshingAd=YES;
//        [self otsDetatchMemorySafeNewThreadSelector:@selector(netThreadGetAdvertisementModel) toTarget:self withObject:nil];
//    }
    
    //功能模块写死了，不刷洗
//    [self otsDetatchMemorySafeNewThreadSelector:@selector(freshFunctionModules) toTarget:self withObject:nil];
    
//    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_HomePage extraPramaDic:nil] autorelease];
//    [DoTracking doJsTrackingWithParma:prama];
}

//下拉刷新停止
-(void)stopEgoRefresh
{
    if (!isRefreshingHotPage && !isRefreshingAd) {
        [m_RefreshHeaderView egoRefreshScrollViewDataSourceDidFinishedLoading:m_ScrollView];
    }
}


#pragma mark    热销图
//***** 轮播图 ************
-(void)newThreadGetHotPage {
	NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
    
    
    
    //Linpan
    YWProductService *productSer = [[YWProductService alloc] init];
    Page *tempPage = [productSer getHomeSpcecialList];
    isRefreshingHotPage=NO;
    
    isRefreshingAd = NO;
    

    if (tempPage!=nil && ![tempPage isKindOfClass:[NSNull class]])
    {
        if (hotTopFivePage!=nil)
        {
            [hotTopFivePage release];
        }
        hotTopFivePage=[tempPage retain];
        for (int i=0; i<[hotTopFivePage.objList count]; i++)
        {
            NSString *fileName;
            NSString *hotProductImgUrlStr=((SpecialRecommendInfo *)[hotTopFivePage.objList objectAtIndex:i]).imageUrl;
            if (hotProductImgUrlStr==nil)
            {
                continue;
            }
            NSData *data=[NSData dataWithContentsOfURL:[NSURL URLWithString:hotProductImgUrlStr]];
            fileName=[hotProductImgUrlStr stringFromMD5];
            
            [DataController writeApplicationData:data name:fileName];
            [self savePagesToLocal:hotTopFivePage];
        }
        
        //楼层广告
        m_AdArray = [hotTopFivePage.adFloorList retain];
        [self performSelectorOnMainThread:@selector(updateHotPage) withObject:nil waitUntilDone:YES];
        
    }
    [self performSelectorOnMainThread:@selector(stopEgoRefresh) withObject:nil waitUntilDone:NO];

    
    
    
    
    
    
    
    
    
    
//	ProductService *pServ=[[ProductService alloc] init];
//    Page *tempPage=[pServ getHomeHotPointListNew:TRADER provinceId:[NSNumber numberWithInt:[[GlobalValue getGlobalValueInstance].provinceId intValue]] currentPage:[NSNumber numberWithInt:1] pageSize:[NSNumber numberWithInt:10]];
//    isRefreshingHotPage=NO;
//    
//    NSLog(@"tempPage -===> \n%@",tempPage);
//    
//    if (tempPage!=nil && ![tempPage isKindOfClass:[NSNull class]]) {
//        if (hotTopFivePage!=nil) {
//            [hotTopFivePage release];
//        }
//        hotTopFivePage=[tempPage retain];
//        for (int i=0; i<[hotTopFivePage.objList count]; i++) {
//            NSString *fileName;
//            NSString *hotProductImgUrlStr=((HotPointNewVO *)[hotTopFivePage.objList objectAtIndex:i]).picUrl;
//            if (hotProductImgUrlStr==nil) {
//                continue;
//            }
//            NSData *data=[NSData dataWithContentsOfURL:[NSURL URLWithString:hotProductImgUrlStr]];
//            fileName=[hotProductImgUrlStr stringFromMD5];
//            
//            [DataController writeApplicationData:data name:fileName];
//            [self savePagesToLocal:hotTopFivePage];
//        }
//        [self performSelectorOnMainThread:@selector(updateHotPage) withObject:nil waitUntilDone:YES];
//    }
//    [self performSelectorOnMainThread:@selector(stopEgoRefresh) withObject:nil waitUntilDone:NO];
//	[pServ release];
	[pool drain];
}

//刷新热销图
-(void)updateHotPage
{
    [self.view setUserInteractionEnabled:YES];
    [m_PageView reloadPageView];
    
    //焦点图和楼层一起了
    [self updateCMSModuleA];
}
-(void)savePagesToLocal:(Page*)aPage
{
    NSString *filename=[OTSUtility documentDirectoryWithFileName:@"SaveHotPages_130502.plist"];
    NSData* pageData = [NSKeyedArchiver archivedDataWithRootObject:aPage];
    [pageData writeToFile:filename atomically:NO];
}

-(Page*)getPagesFromLocal
{
    NSString *filename=[OTSUtility documentDirectoryWithFileName:@"SaveHotPages_130502.plist"];
    Page* aPage = [NSKeyedUnarchiver unarchiveObjectWithFile:filename];
    return aPage;
}
#pragma mark    功能模块
-(void)saveModulesToLocal:(NSMutableArray*)adPromotion
{
    NSString *filename=[OTSUtility documentDirectoryWithFileName:@"saveModules_130502.plist"];
    NSData* arrData = [NSKeyedArchiver archivedDataWithRootObject:adPromotion];
    [arrData writeToFile:filename atomically:NO];
}

-(NSMutableArray*)getModulesFromLocal
{
    NSString *filename=[OTSUtility documentDirectoryWithFileName:@"saveModules_130502.plist"];
    NSMutableArray* objArr = [NSKeyedUnarchiver unarchiveObjectWithFile:filename];
    return objArr;
}


//-(void)freshFunctionModules{
//    @autoreleasepool {
//        SystemService* ser=[[SystemService alloc] init];
//        NSArray* tempAr=[ser getHomeModuleList:[GlobalValue getGlobalValueInstance].trader];
//        if (tempAr!=nil) {
//            if (modulesArray==nil) {
//                modulesArray=[[NSMutableArray alloc] init];
//            }else{
//                [modulesArray removeAllObjects];
//            }
//            [modulesArray addObjectsFromArray:tempAr];
//            [self saveModulesToLocal:modulesArray];
//        }
//        [self performSelectorOnMainThread:@selector(updateModules) withObject:nil waitUntilDone:NO];
//        [self performSelectorOnMainThread:@selector(stopEgoRefresh) withObject:nil waitUntilDone:NO];
//        [ser release];
//    }
//}
//首页8个模块的下4个 品牌旗舰、浏览历史。。。。
-(void)updateModules
{
    UIView*moduleView=[m_ScrollView viewWithTag:moduleTag];
    for (UIView*v in moduleView.subviews) {
        if (v.tag>103) {
            [v removeFromSuperview];
        }
    }
    int cout=modulesArray.count>4?4:modulesArray.count;
    for (int i=0;i<cout; i++)
    {
        HomeModuleVO*modulevo=[modulesArray objectAtIndex:i];
        UILabel* lab=[[UILabel alloc] initWithFrame:CGRectMake(1+(i%4)*77, 160, MODEAL_IMAGE_WIDTH+26, 30)];
        lab.backgroundColor=[UIColor clearColor];
        lab.tag=i+1000;
        [lab setFont:[UIFont systemFontOfSize:14.0]];
        [lab setTextAlignment:UITextAlignmentCenter];
        lab.text=modulevo.moduleName;
        [moduleView addSubview: lab];
        [lab release];
        
        UIButton*but=[UIButton buttonWithType:UIButtonTypeCustom];
        but.frame=CGRectMake(14+(i%4)*77,100, MODEAL_IMAGE_WIDTH, MODEAL_IMAGE_HEIGHT);
        but.tag=104+i;
        [but setImageWithURL:[NSURL URLWithString:modulevo.moduleIcon] refreshCache:NO placeholderImage:[UIImage imageNamed:@"120x120-holder.png"]];
        [but addTarget:self action:@selector(moduleBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        [moduleView addSubview:but];
    }
    [self adjustModulesHeight];
    DebugLog(@"首页功能模块加载完成，物流查询消息发送!!!");
    [[NSNotificationCenter defaultCenter] postNotificationName:@"remoteRecived" object:self];
}
-(void)adjustModulesHeight{
    UIView*moduleView=[m_ScrollView viewWithTag:moduleTag];

    
    //8个模块被写死，所以不需要调整高度了－－－－ Linpan
    moduleView.frame=CGRectMake(0, 120, 320, 200);
    modelATable.frame=CGRectMake(0, 120+200, 320, 750);
    
    ///////1号店原版////////
    /*
    if (modulesArray.count==0) {
        moduleView.frame=CGRectMake(0, 120, 320, 113);
        modelATable.frame=CGRectMake(0, 120+120, 320, 750);
    }else{
        moduleView.frame=CGRectMake(0, 120, 320, 200);
        modelATable.frame=CGRectMake(0, 120+200, 320, 750);
    }
    */
    
}
-(void)initFunctionModules
{
    
    CGFloat yValueInScroll=120.0;
    UIView *moduleView=[[UIView alloc] initWithFrame:CGRectMake(0, yValueInScroll, 320, 200)];
    moduleView.tag=moduleTag;
    [m_ScrollView addSubview:moduleView];
    [moduleView release];
    
    CGFloat xValue=14.0;
    CGFloat yValue=8.0;
    int i;
    for (i=0; i<8; i++)
    {
        UIButton *button=[[UIButton alloc] initWithFrame:CGRectMake(xValue, yValue, MODEAL_IMAGE_WIDTH, MODEAL_IMAGE_HEIGHT)];
        [button setTag:100+i];
        NSString *moduleName;
        UIImage *image;
        switch (i)
        {
            case 0:
                moduleName=@"1起摇";
                image=[UIImage imageNamed:@"modelshake.png"];
                break;
            case 1:
                moduleName=@"1号团";
                image=[UIImage imageNamed:@"modelgroupon.png"];
                break;
            case 2:
                moduleName=@"扫描";
                image=[UIImage imageNamed:@"modelscan.png"];
                break;
            case 3:
                moduleName=@"物流查询";
                image=[UIImage imageNamed:@"modelflow.png"];
                break;
            case 4:
                moduleName = @"品牌旗舰";
                image = [UIImage imageNamed:@"modelbrank.png"];
                break;
            case 5:
                moduleName = @"浏览历史";
                image = [UIImage imageNamed:@"modelhistory.png"];
                break;
            case 6:
                moduleName = @"我的收藏";
                image = [UIImage imageNamed:@"modelcollect.png"];
                break;
            case 7:
                moduleName = @"天天疯抢";
                image = [UIImage imageNamed:@"modelsale.png"];
                break;
            default:
                break;
        }
        [button setImage:image forState:UIControlStateNormal];
        [button addTarget:self action:@selector(moduleBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        
        [moduleView addSubview:button];
        [button release];
        
        if (i == 0)
        {
            UIImageView* secretImage = [[UIImageView alloc] initWithFrame:CGRectMake(38, 0, 54, 23)];
            [secretImage setImage:[UIImage imageNamed:@"tips.png"]];
            [moduleView addSubview:secretImage];
            [secretImage release];
        }
        
        
        UILabel *label=[[UILabel alloc] initWithFrame:CGRectMake(xValue-13, yValue+60, MODEAL_IMAGE_WIDTH+26, 30)];
        [label setBackgroundColor:[UIColor clearColor]];
        [label setText:moduleName];
        [label setFont:[UIFont systemFontOfSize:14.0]];
        [label setTextAlignment:NSTextAlignmentCenter];
        [moduleView addSubview:label];
        [label release];
        
        if (i == 3)
        {
            xValue = 14.0;
            yValue = 100.0;
        }
        else
        {
            xValue+=77.0;
        }
        
    }
    modelATable=[[UITableView alloc]initWithFrame:CGRectMake(0, yValueInScroll+200, 320, 750) style:UITableViewStylePlain];
    modelATable.delegate=self;
    modelATable.dataSource=self;
    [m_ScrollView addSubview:modelATable];
    modelATable.scrollEnabled=NO;
    
    moduleView.frame=CGRectMake(0, 120, 320, 200);
    modelATable.frame=CGRectMake(0, 120+200, 320, 750);

    
//////////1号店原版，只固定上面4个模块，下面4个网络获取，现在改为全部写死  －－－ Linpan
/*
    CGFloat yValueInScroll=120.0;
    UIView *moduleView=[[UIView alloc] initWithFrame:CGRectMake(0, yValueInScroll, 320, 200)];
    moduleView.tag=moduleTag;
    [m_ScrollView addSubview:moduleView];
    [moduleView release];
    
    CGFloat xValue=14.0;
    CGFloat yValue=8.0;
    int i;
    for (i=0; i<4; i++)
    {
        UIButton *button=[[UIButton alloc] initWithFrame:CGRectMake(xValue, yValue, MODEAL_IMAGE_WIDTH, MODEAL_IMAGE_HEIGHT)];
        [button setTag:100+i];
        NSString *moduleName;
        UIImage *image;
        switch (i)
        {
            case 0:
                moduleName=@"1起摇";
                image=[UIImage imageNamed:@"modelshake.png"];
                break;
            case 1:
                moduleName=@"1号团";
                image=[UIImage imageNamed:@"modelgroupon.png"];
                break;
            case 2:
                moduleName=@"扫描";
                image=[UIImage imageNamed:@"modelscan.png"];
                break;
            case 3:
                moduleName=@"物流查询";
                image=[UIImage imageNamed:@"modelflow.png"];
                break;
            default:
                break;
        }
        [button setImage:image forState:UIControlStateNormal];
        [button addTarget:self action:@selector(moduleBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
        
        [moduleView addSubview:button];
        [button release];
        
        if (i == 0)
        {
            UIImageView* secretImage = [[UIImageView alloc] initWithFrame:CGRectMake(38, 0, 54, 23)];
            [secretImage setImage:[UIImage imageNamed:@"tips.png"]];
            [moduleView addSubview:secretImage];
            [secretImage release];
        }
        

        UILabel *label=[[UILabel alloc] initWithFrame:CGRectMake(xValue-13, yValue+60, MODEAL_IMAGE_WIDTH+26, 30)];
        [label setBackgroundColor:[UIColor clearColor]];
        [label setText:moduleName];
        [label setFont:[UIFont systemFontOfSize:14.0]];
        [label setTextAlignment:NSTextAlignmentCenter];
        [moduleView addSubview:label];
        [label release];
        
        xValue+=77.0;
    }
    modelATable=[[UITableView alloc]initWithFrame:CGRectMake(0, yValueInScroll+200, 320, 750) style:UITableViewStylePlain];
    modelATable.delegate=self;
    modelATable.dataSource=self;
    [m_ScrollView addSubview:modelATable];
    modelATable.scrollEnabled=NO;

    if (modulesArray && modulesArray.count > 0)
    {
        [self updateModules];
    }
 */
    
}

//点击模块
-(void)moduleBtnClicked:(id)sender
{
    UIButton *  button=(UIButton*)sender;
    int index=[button tag]-100;
    switch (index) {
        case 0: {//1起摇
            [SharedDelegate enterRockBuy];
            JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_RockBuy extraPramaDic:nil]autorelease];
            [DoTracking doJsTrackingWithParma:prama];
            break;
        }
        case 3: {//物流查询
            [self enterLogisticQuery];
            break;
        }
        case 2: {//扫描
            [self removeSubControllerClass:[Scan class]];
            Scan *scan=[[[Scan alloc] initWithNibName:@"Scan" bundle:nil] autorelease];
            [self pushVC:scan animated:NO];
            break;
        }
        case 1: {//1号团
            
            [self removeSubControllerClass:[GroupBuyHomePage class]];
            GroupBuyHomePage *groupBuyHomePage=[[[GroupBuyHomePage alloc] initWithNibName:@"GroupBuyHomePage" bundle:nil] autorelease];
            [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
            [self pushVC:groupBuyHomePage animated:YES];
            [self setUniqueScrollToTopFor:groupBuyHomePage.m_TableView];
            //[DoTracking doTracking:[NSString stringWithFormat:@"getCurrentGrouponList_%@",[GlobalValue getGlobalValueInstance].provinceId]];
            //点1号团数据统计
            JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_GroupLogo extraPramaDic:nil]autorelease];
            [DoTracking doJsTrackingWithParma:prama];
            
            break;
        }
        default:
            break;
    }
    if(index>3){
        HomeModuleVO*HMVo=[modulesArray objectAtIndex:index-4];
        switch (HMVo.moduleId.intValue) {
            case 8:{//商城
                NSString* urlStr;
                if ([GlobalValue getGlobalValueInstance].token == nil) {
                    urlStr = [HMVo.wapUrl stringByAppendingFormat:@"/%@?osType=30",[GlobalValue getGlobalValueInstance].provinceId];
                }else {
                    // 对 token 进行base64加密
                    NSData *b64Data = [GTMBase64 encodeData:[[GlobalValue getGlobalValueInstance].token dataUsingEncoding:NSUTF8StringEncoding]];
                    NSString* b64Str = [[[NSString alloc] initWithData:b64Data encoding:NSUTF8StringEncoding] autorelease];
                    urlStr = [HMVo.wapUrl stringByAppendingFormat:@"/%@?osType=30&token=%@",[GlobalValue getGlobalValueInstance].provinceId,b64Str];
                }
                [SharedDelegate enterWap:0 invokeUrl:urlStr isClearCookie:NO];
            }
                break;
            case 7:{//名品特卖
                NSString* urlStr=[NSString stringWithFormat:@"%@/30/%@",HMVo.wapUrl,[GlobalValue getGlobalValueInstance].provinceId];
                //                [SharedDelegate enterWap:0 invokeUrl:urlStr isClearCookie:YES];
                if (celebrateTitleStr!=nil) {
                    [celebrateTitleStr release];
                }
                celebrateTitleStr=[HMVo.moduleName retain];
                if (celebrateWebUrl!=nil) {
                    [celebrateWebUrl release];
                }
                celebrateWebUrl=[urlStr retain];
                CATransition *animation = [CATransition animation];
                animation.duration = 0.3f;
                animation.timingFunction = UIViewAnimationCurveEaseInOut;
                [animation setType:kCATransitionPush];
                [animation setSubtype: kCATransitionFromRight];
                [self.view.superview.layer addAnimation:animation forKey:@"Reveal"];
                [self initCelebrateView];
                
                JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_CrazyShopping extraPramaDic:nil]autorelease];
                [DoTracking doJsTrackingWithParma:prama];
            }
                break;
                
            case 9:{//品牌旗舰
                [self removeSubControllerClass:[BrandStoreViewController class]];
                BrandStoreViewController*brandVC=[[[BrandStoreViewController alloc] init] autorelease];
                [self pushVC:brandVC animated:YES fullScreen:YES];
                JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_TopBrand extraPramaDic:nil]autorelease];
                [DoTracking doJsTrackingWithParma:prama];
            }
                break;
            case 10:{//历史记录
                [self removeSubControllerClass:[MyBrowse class]];
                MyBrowse *browse=[[[MyBrowse alloc]initWithNibName:@"MyBrowse" bundle:nil] autorelease];
                [self pushVC:browse animated:YES];
            }
                break;
            case 4:{//收藏
                if ([GlobalValue getGlobalValueInstance].token != nil) {
                    MyFavorite *myFavorite = [[[MyFavorite alloc]initWithNibName:@"MyFavorite" bundle:nil] autorelease];
                    myFavorite->fromTag = FROM_HOMEPAGE_TO_FAVORITE;
                    [self pushVC:myFavorite animated:YES];
                } else {
                    [SharedDelegate enterUserManageWithTag:15];
                }
            }
                break;
            default:
                break;
        }
    }
}

#pragma mark    广告模块

//不用再重新接口去获取楼层
/*

//新线程获取广告模块
-(void)netThreadGetAdvertisementModel
{
    if (m_UpdateTag==nil) {
        m_UpdateTag=[[NSString alloc] initWithString:@""];
    }
    NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
    AdvertisementServer *adServer=[[[AdvertisementServer alloc] init] autorelease];
    AdvertisingPromotion *tempAdPromotion=[adServer getCmsAdvertisingPromotion:[GlobalValue getGlobalValueInstance].trader provinceId:[NSNumber numberWithInt:[[GlobalValue getGlobalValueInstance].provinceId intValue]] updateTag:m_UpdateTag];
    isRefreshingAd=NO;
    if (tempAdPromotion!=nil && ![tempAdPromotion isKindOfClass:[NSNull class]])
    {
        if ([tempAdPromotion isUpdate] != nil && [[tempAdPromotion isUpdate] intValue] == 1)
        {
            //后台已更新
            [self saveAdModulesToLocal:tempAdPromotion];//缓存广告模块
            if (m_AdArray!=nil)
            {
                [m_AdArray release];
            }
            m_AdArray=[[NSMutableArray alloc] init];
            //添加模块A
            for (AdvertisingPromotionVO *adVO in [tempAdPromotion advertisingPromotionVOList])
            {
                if ([[adVO advertisingType] intValue]==1 || [[adVO advertisingType] intValue]==2)
                {
                    if (adVO==nil || [adVO hotPointNewVOList]==nil)
                    {
                    }
                    else
                    {
                        [m_AdArray addObject:adVO];
                    }
                }
                else
                {
                }
            }
            if (m_UpdateTag!=nil)
            {
                [m_UpdateTag release];
            }
            if ([tempAdPromotion updateTag]!=nil)
            {
                m_UpdateTag=[[NSString alloc] initWithString:[tempAdPromotion updateTag]];
            }
            else
            {
                m_UpdateTag=[[NSString alloc] initWithString:@""];
            }
        }
        else
        {
        }
    }
    else
    {
    }
    [self performSelectorOnMainThread:@selector(updateCMSModuleA) withObject:nil waitUntilDone:NO];
    [self performSelectorOnMainThread:@selector(stopEgoRefresh) withObject:nil waitUntilDone:NO];
    [pool drain];
}
 */

//刷新模块A列表
-(void)updateCMSModuleA{
    UIView*moduleView=[m_ScrollView viewWithTag:moduleTag];
    CGFloat yValueInScroll=120+moduleView.frame.size.height;
    [modelATable reloadData];
    [self adjustModulesHeight];
    int    increace=m_AdArray.count>3?3:m_AdArray.count;
    [m_ScrollView setContentSize:CGSizeMake(320, yValueInScroll+increace*250.0)];
    
}

#pragma mark tableview 新的model A
-(void)keywordBtnSelceted:(UIButton*)button type:(int)type{
    NSString *keyword=[button titleForState:UIControlStateNormal];
    if (keyword!=nil)
    {
        SearchResult *searchResult=[[[SearchResult alloc] initWithKeyword:keyword fromTag:FROM_AD_MODEL] autorelease];
        [self pushVC:searchResult animated:YES];
    }
//    switch (type)
//    {
//        case 0:{
//            JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_keyWord_Food extraPrama:keyword, nil]autorelease];
//            [DoTracking doJsTrackingWithParma:prama];
//        }
//            break;
//        case 1:{
//            JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_keyWord_General extraPrama:keyword,nil]autorelease];
//            [DoTracking doJsTrackingWithParma:prama];
//        }
//            break;
//        case 2:{
//            JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_keyWord_CE extraPrama:keyword,nil]autorelease];
//            [DoTracking doJsTrackingWithParma:prama];
//        }
//            break;
//            
//        default:
//            break;
//    }
}
//楼层图片点击事件入口
-(void)promotionTapcell:(HomePageModelACell*)cell withIdenty:(int)tag {
    AdvertisingPromotionVO* advP = [OTSUtility safeObjectAtIndex:cell.tag inArray:m_AdArray];
    if (advP==nil) {
        return;
    }
    NSArray*hotPnewVOArray=advP.hotPointNewVOList;
    HotPointNewVO*vo=[OTSUtility safeObjectAtIndex:tag inArray:hotPnewVOArray];
    if (vo==nil) {
        return;
    }
    if ([vo.type intValue]==5) {
        [self enterNNPieces:vo];//n n
        JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_HotPage extraPrama:[NSString stringWithFormat:@"%@",vo.promotionId],nil]autorelease];
        [DoTracking doJsTrackingWithParma:prama];
    }else if([vo.type intValue]==6){
        //蛮贱
        [self enterRePromotion:vo];
        JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_HotPage extraPrama:[NSString stringWithFormat:@"%@",vo.promotionId],nil]autorelease];
        [DoTracking doJsTrackingWithParma:prama];
    }else{
        [self enterCMSPage:vo];
        NSInteger type = cell.tag;
        if (type == 0) {    // 食品
            JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_Food extraPrama:[NSString stringWithFormat:@"%@",vo.promotionId], nil]autorelease];
            [DoTracking doJsTrackingWithParma:prama];
        }else
            if (type == 1) {    // 百货
                JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_General extraPrama:[NSString stringWithFormat:@"%@",vo.promotionId],nil]autorelease];
                [DoTracking doJsTrackingWithParma:prama];
            }else
                if (type == 2) {    // CE 数码
                    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_CE extraPrama:[NSString stringWithFormat:@"%@",vo.promotionId],nil]autorelease];
                    [DoTracking doJsTrackingWithParma:prama];
                }else{
                    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_HotPage extraPrama:[NSString stringWithFormat:@"%@",vo.promotionId],nil]autorelease];
                    [DoTracking doJsTrackingWithParma:prama];
                }
    }
    
    /* 热销活动类型：0-热销商品；
     1- 热销活动；
     2- 市场活动规则；
     3-绑定团购；
     4新热销活动；
     5-热门促销(n元N件等促销活动)；
     6-热门促销(赠品、满减等促销活动)*/
}
-(void)enterRePromotion:(HotPointNewVO*)HTnewVO{
    CategoryProductsViewController*cateProduct=[[[CategoryProductsViewController alloc] init] autorelease] ;
    [cateProduct setCateId:[NSNumber numberWithInt:0]];
    [cateProduct setTitleLableText:HTnewVO.title];
    [cateProduct setTitleText:@"全部"];
    [cateProduct setPromotionId:HTnewVO.promotionId];
    [cateProduct setIsCashPromotionList:YES];
    [cateProduct setIsFailSatisfyFullDiscount:YES];
    [self pushVC:cateProduct animated:YES fullScreen:YES];
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    NSLog(@" m_AdArray.count--> %d", m_AdArray.count);
    return m_AdArray.count>3?3:m_AdArray.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
//    AdvertisingPromotionVO* adpvo=[OTSUtility safeObjectAtIndex:indexPath.row inArray:m_AdArray];
//    //该楼层下无活动就隐藏掉
//    if (adpvo.hotPointNewVOList.count==0) {
//        return 0;
//    }
    return 250.0;
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    static NSString* identify=@"cell";
    HomePageModelACell* cell=[tableView dequeueReusableCellWithIdentifier:identify];
    if (cell==nil)
    {
        cell=[[[HomePageModelACell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identify] autorelease];
    }
    cell.delegate=self;

    NSLog(@"m_array -> %@",m_AdArray);
    AdFloorInfo *floor = m_AdArray[indexPath.row];
    if (floor && [floor isKindOfClass:[AdFloorInfo class]])
    {
        cell.keywordsArray = floor.keywordList;
        cell.selectionStyle=UITableViewCellSelectionStyleNone;
        cell.tag=indexPath.row;
        
        SpecialRecommendInfo *product = floor.productList[0];
        [cell loadBigImg:product.imageUrl title:product.name subTitle:product.name];
        
        SpecialRecommendInfo *product1 = floor.productList[1];
        [cell loadFistImg:product1.imageUrl title:product1.name subTitle:product1.name];
        
        SpecialRecommendInfo *product2 = floor.productList[2];
        [cell loadsecondImg:product2.imageUrl title:product2.name subTitle:product2.name];
        
        int style= 1;
        NSString* tit=floor.title;
//        if (tit!=nil&&[tit isKindOfClass:[NSString class]]&&tit.length>0) {
            [cell freshCell:indexPath.row style:style title:tit];
//        }
    }
    return cell;
    
    
    
    
    
    //1号店原版
    /*HomePageModelACell* cell=[tableView dequeueReusableCellWithIdentifier:identify];
    if (cell==nil)
    {
        cell=[[[HomePageModelACell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identify] autorelease];
    }
    cell.delegate=self;
    //该楼层下无活动就隐藏掉
    if (cell.frame.size.height==0)
    {
        cell.contentView.hidden=YES;
    }
    AdvertisingPromotionVO* advP=[OTSUtility safeObjectAtIndex:indexPath.row inArray:m_AdArray];
    if (advP && [advP isKindOfClass:[AdvertisingPromotionVO class]])
    {
        cell.keywordsArray=advP.keywordList;
        NSArray*hotPnewVOArray=advP.hotPointNewVOList;
        cell.selectionStyle=UITableViewCellSelectionStyleNone;
        cell.tag=indexPath.row;
        HotPointNewVO* bigVo=[OTSUtility safeObjectAtIndex:0 inArray:hotPnewVOArray];
        [cell loadBigImg:bigVo.logoPicUrl title:bigVo.title subTitle:bigVo.subtitle];
        
        HotPointNewVO* firstVo=[OTSUtility safeObjectAtIndex:1 inArray:hotPnewVOArray];
        [cell loadFistImg:firstVo.logoPicUrl title:firstVo.title subTitle:firstVo.subtitle];
        
        
        HotPointNewVO* secondVO=[OTSUtility safeObjectAtIndex:2 inArray:hotPnewVOArray];
        [cell loadsecondImg:secondVO.logoPicUrl title:secondVO.title subTitle:secondVO.subtitle];
        
        int style=0;
        if (advP.advertisingType!=nil&&[advP.advertisingType isKindOfClass:[NSNumber class]]) {
            style=[advP.advertisingType intValue];
        }
        NSString* tit=advP.title;
        if (tit!=nil&&[tit isKindOfClass:[NSString class]]&&tit.length>0) {
            [cell freshCell:indexPath.row style:style title:tit];
        }
    }
    return cell;*/
}
#pragma mark --
//**********首页楼层已经用tableview代替吧，此方法已经废弃 --Apan 2013－7-12
/*
//刷新广告模块的位置
-(void)updateAdModelFrame
{
    CGFloat yValueInScroll=320;
    int i;
    for (i=0; i<[m_AdArray count]; i++) {
        AdvertisingPromotionVO *adVO=[OTSUtility safeObjectAtIndex:i inArray:m_AdArray];
        UIView *view=[m_ScrollView viewWithTag:200+i];
        if (adVO && [adVO isKindOfClass:[AdvertisingPromotionVO class]]) {
            if ([view isKindOfClass:[OTSAdModelAView class]]) {
                OTSAdModelAView *modelAView=(OTSAdModelAView *)view;
                CGFloat height=211.0+50.0*([[adVO hotPointNewVOList] count]-1);
                if ([[adVO advertisingType] intValue]==LEFT_TYPE) {
                    height+=LEFT_TYPE_IMAGE_HEIGHT;
                } else if ([[adVO advertisingType] intValue]==RIGHT_TYPE) {
                    height+=RIGHT_TYPE_IMAGE_HEIGHT;
                }
                [modelAView setFrame:CGRectMake(0, yValueInScroll, 320, height)];
                yValueInScroll+=height;
            } else if ([view isKindOfClass:[OTSAdModelBView class]]) {
                OTSAdModelBView *modelBView=(OTSAdModelBView *)view;
                CGFloat height;
                if ([modelBView isFold]) {
                    height=80.0;
                } else if ([[adVO hotPointNewVOList] count]>1) {
                    HotPointNewVO *hotPointVO=[OTSUtility safeObjectAtIndex:1 inArray:[adVO hotPointNewVOList]];
                    if (hotPointVO.grouponVOList!=nil || hotPointVO.productVOList!=nil) {
                        height=320.0+44.0*([[adVO hotPointNewVOList] count]-2);
                    } else {
                        height=155.0+44.0*([[adVO hotPointNewVOList] count]-2);
                    }
                } else {
                    height=155.0;
                }
                [modelBView setFrame:CGRectMake(0, yValueInScroll, 320, height)];
                yValueInScroll+=height-24.0;
            }
            
        }
        
    }
    [m_ScrollView setContentSize:CGSizeMake(320, yValueInScroll+40.0)];
}
*/

//在tabbar上选择第一个时调用此方法 -----linpan 2013-7-13
//刷新广告模块
-(void)updateAdModules
{
    //刷新广告模块 
    if (!isRefreshingAd) {
        isRefreshingAd=YES;
//        [self otsDetatchMemorySafeNewThreadSelector:@selector(netThreadGetAdvertisementModel) toTarget:self withObject:nil];
        [self otsDetatchMemorySafeNewThreadSelector:@selector(newThreadGetHotPage) toTarget:self withObject:nil];
        

        
    }
}

-(void)saveAdModulesToLocal:(AdvertisingPromotion *)adPromotion
{
    NSArray *paths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);
    NSString *path=[paths objectAtIndex:0];
    NSString *filename=[path stringByAppendingPathComponent:@"SaveAdModule.plist"];
    
    NSMutableDictionary *mDictionary=[adPromotion dictionaryFromVO];
    
    if ([GlobalValue getGlobalValueInstance].provinceId)
    {
        [mDictionary setObject:[GlobalValue getGlobalValueInstance].provinceId forKey:@"provinceId"];
    }
    [mDictionary writeToFile:filename atomically:NO];
}

-(NSMutableDictionary *)getAdModulesFromLocal
{
    NSArray *paths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask,YES);
    NSString *path=[paths objectAtIndex:0];
    NSString *filename=[path stringByAppendingPathComponent:@"SaveAdModule.plist"];
    NSMutableDictionary *mDictionary=[[[NSMutableDictionary alloc] initWithContentsOfFile:filename] autorelease];
    return mDictionary;
}

#pragma mark    新线程加入购物车
-(void)newThreadAddCart:(NSArray *)array
{
    NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
    if ([array count]<4) {
        [pool release];
        return;
    }
    int productId=[[array objectAtIndex:0] intValue];
    int merchantId=[[array objectAtIndex:1] intValue];
    int buyQuantity=[[array objectAtIndex:2] intValue];
    NSString *promotionId=[array objectAtIndex:3];
    if ([promotionId isEqualToString:@"0"]) {
        promotionId=@"";
    }
    //获取商品详情后加入购物车
    ProductService *pSer=[[[ProductService alloc] init] autorelease];
    ProductVO *tempProductVO=[pSer getProductDetail:[GlobalValue getGlobalValueInstance].trader productId:[NSNumber numberWithInt:productId] provinceId:[GlobalValue getGlobalValueInstance].provinceId promotionid:promotionId];
    if (tempProductVO!=nil && ![tempProductVO isKindOfClass:[NSNull class]] && tempProductVO.cnName!=nil && ![tempProductVO.cnName isEqualToString:@""]) {
        //图片
        NSString *fileName=[NSString stringWithFormat:@"middle_%@",[NSNumber numberWithInt:productId]];
        NSData *data=[DataController applicationDataFromFile:fileName];
        if (data==nil) {
            NSData *netData=[NSData dataWithContentsOfURL:[NSURL URLWithString:[tempProductVO midleDefaultProductUrl]]];
            [DataController writeApplicationData:netData name:fileName];
        }
        
        if ([GlobalValue getGlobalValueInstance].token!=nil)
        {
            CartService *cSer=[[[CartService alloc] init] autorelease];
            
            AddProductResult *result=[cSer addSingleProduct:[GlobalValue getGlobalValueInstance].token productId:[NSNumber numberWithInt:productId] merchantId:[NSNumber numberWithInt:merchantId] quantity:[NSNumber numberWithInt:buyQuantity] promotionid:promotionId];
            if (result!=nil && ![result isKindOfClass:[NSNull class]]) {
                if ([[result resultCode] intValue]==1) {//成功
                    [self performSelectorOnMainThread:@selector(showBuyProductAnimation:) withObject:array waitUntilDone:NO];
                } else {
                    [self performSelectorOnMainThread:@selector(showError:) withObject:[result errorInfo] waitUntilDone:NO];
                }
            } else {
                [self performSelectorOnMainThread:@selector(showError:) withObject:@"网络异常，请检查网络配置..." waitUntilDone:NO];
            }
        } else {
            LocalCartItemVO *localProductVO=[[LocalCartItemVO alloc] initWithProductVO:tempProductVO quantity:[NSString stringWithFormat:@"%d",buyQuantity]];
            [SharedDelegate addProductToLocal:localProductVO];
            [self performSelectorOnMainThread:@selector(showBuyProductAnimation:) withObject:array waitUntilDone:YES];
            [localProductVO release];
        }
        // 加入购物车统计
        JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AddCart extraPramaDic:nil]autorelease];
        [prama setProductId:[NSNumber numberWithInt:productId]];
        [prama setMerchant_id:[NSString stringWithFormat:@"%d",merchantId]];
        [DoTracking doJsTrackingWithParma:prama];
    } else {
        [self performSelectorOnMainThread:@selector(showError:) withObject:@"网络异常，请检查网路配置..." waitUntilDone:NO];
    }
    [pool drain];
}

//显示加入购物车动画
-(void)showBuyProductAnimation:(NSArray *)array {
    int buyQuantity=[[array objectAtIndex:2] intValue];
    if (isAnimStop) {
        isAnimStop=NO;
        [SharedDelegate showAddCartAnimationWithDelegate:self];
    }
    [SharedDelegate setCartNum:buyQuantity];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"CartChanged" object:nil];
}

-(void)animationFinished
{
    isAnimStop=YES;
}

-(void)showError:(NSString *)errorInfo
{
    [AlertView showAlertView:nil alertMsg:errorInfo buttonTitles:nil alertTag:ALERTVIEW_TAG_COMMON];
}

#pragma mark    返回首页主页面
-(void)returntoHomePage {
    [self.view setUserInteractionEnabled:YES];
    [m_ScrollView setScrollEnabled:YES];
	[UIView setAnimationsEnabled:NO];
    if (m_CelebrateView != nil) {
        [self hideLoading];
		[m_CelebrateView removeFromSuperview];
	}
    [self setUniqueScrollToTopFor:m_ScrollView];
    [self removeSubControllerClass:[BrandStoreViewController class]];
    [self removeAllMyVC];
    [m_ScrollView setContentOffset:CGPointZero animated:YES];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"ResignFirstResponderFromHomepage" object:self];
    
    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_HomePage extraPramaDic:nil]autorelease];
    [DoTracking doJsTrackingWithParma:prama];
}

#pragma mark    物流查询
-(void)enterLogisticQuery
{
    if ([GlobalValue getGlobalValueInstance].token==nil)
    {
        [SharedDelegate enterUserManageWithTag:11];
        return;
    }
    
    NSAutoreleasePool * pool=[[NSAutoreleasePool alloc] init];
    
    [self removeSubControllerClass:[OTSMaterialFLowVC class]];
    
    OTSMaterialFLowVC* vc = [[[OTSMaterialFLowVC alloc] init] autorelease];
    [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
    [self pushVC:vc animated:YES];
	[self setUniqueScrollToTopFor:(UIScrollView*)(vc.tv)];
    [pool drain];
}

#pragma mark n元n件
-(void)enterNNPieces:(HotPointNewVO *)hotPointNewVO
{
    [self removeSubControllerClass:[OTSNNPiecesVC class]];
    OTSNNPiecesVC* vc = [[[OTSNNPiecesVC alloc] init] autorelease];
    [vc setPromotionId:hotPointNewVO.promotionId];
    [vc setPromotionLevelId:hotPointNewVO.promotionLevelId];
    [vc setNnpiecesTitle:hotPointNewVO.title];
    [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
    [self pushVC:vc animated:YES];
    //	[self setUniqueScrollToTopFor:(UIScrollView*)(vc.tv)];
}

#pragma mark 切换省份
//省份已切换
-(void)provinceChanged:(NSString *)provinceName
{
    self.m_NewProvinceStr= provinceName;
    [self refreshAllForProvinceChanged];
}

-(void)appFirstLaunch
{
    NSString *gpsProvinceStr=[GlobalValue getGlobalValueInstance].gpsProvinceStr;
    UIAlertView *alertView=[[OTSAlertView alloc] initWithTitle:@"收货省份选择" message:@"因各省份所售商品不同，请根据你的收货地址选择相应的省份" delegate:self cancelButtonTitle:@"其他省份" otherButtonTitles:[NSString stringWithFormat:@"选择%@",gpsProvinceStr], nil];
    [alertView setTag:ALERT_TAG_APP_FIRST_LAUNCH];
    [alertView show];
    [SharedDelegate setM_isAlertViewShowing:YES];
    [SharedDelegate setM_IsFirstLaunch:NO];
    [alertView release];
}

-(void)appFirstLaunchFail
{
    [self enterSwitchProvince];
}

-(void)alertChangeProvince:(int)alertTage
{
    NSString *gpsProvinceStr=[GlobalValue getGlobalValueInstance].gpsProvinceStr;
    NSString *message=[NSString stringWithFormat:@"定位到你当前在%@\n需要更换收货省份吗？",gpsProvinceStr];
    UIAlertView *alertView=[[OTSAlertView alloc] initWithTitle:@"省份切换" message:message delegate:self cancelButtonTitle:@"取消" otherButtonTitles:[NSString stringWithFormat:@"更换"], nil];
	[alertView setTag:alertTage];
    [alertView show];
    [SharedDelegate setM_isAlertViewShowing:YES];
    [alertView release];
}

-(void)appStartLaunch
{
    [self alertChangeProvince:ALERT_TAG_APP_START_LAUNCH];
}

-(void)appWakeFromBackGround
{
    [self alertChangeProvince:ALERT_TAG_APP_WAKE];
}

-(void)homePageSearchBarBecomeFirstResponder
{
    [m_Search.m_HomePageSearchBar becomeFirstResponder];
}

#pragma mark 切换省份
//省份切换刷新所有
-(void)refreshAllForProvinceChanged
{
    UIButton *selProvinceBtn=(UIButton *)[self.view viewWithTag:VIEW_TAG_SEL_PROVINCE_BUTTON];
    [selProvinceBtn setTitle:m_NewProvinceStr forState:UIControlStateNormal];
    
    NSNumber *selectedProvinceID=[[NSNumber alloc] initWithInt:[[m_ProvinceDic objectForKey:m_NewProvinceStr] intValue]];
    [[GlobalValue getGlobalValueInstance] setProvinceId:selectedProvinceID];
    [selectedProvinceID release];
    
    NSMutableArray *array=[[NSMutableArray alloc] init];
    [array addObject:m_NewProvinceStr];
    [[GPSUtil sharedInstance] saveProvinceToPlist:array];
    [array release];
    
    NSNumber* provinceId = [GlobalValue getGlobalValueInstance].provinceId;
    if (provinceId)
    {
        NSString* keyStr = [provinceId stringValue];
        NSArray* provinces = [m_ProvinceDic allKeysForObject:keyStr];
        NSString* provinceStr = [OTSUtility safeObjectAtIndex:0 inArray:provinces];
        self.m_CurrentProvinceStr = provinceStr;
        //-----------切换省份时线程更新最近浏览数据----------------------------
        [self otsDetatchMemorySafeNewThreadSelector:@selector(newThreadUptBrowse:) toTarget:self withObject:provinceId];
    }
    
    //清空本地购物车
    if ([GlobalValue getGlobalValueInstance].token!=nil) {
        LocalCartService* tempLocalCartSer = [[LocalCartService alloc]init];
        [tempLocalCartSer cleanLocalCartFromSqlite3];
        [tempLocalCartSer release];
    }
    
	//切换省份
    if (!isChangingProvince) {
		isChangingProvince=YES;
		[self otsDetatchMemorySafeNewThreadSelector:@selector(newThreadChangeProvince) toTarget:self withObject:nil];
	}
    
    [self refreshHomePageData];
    
    [[GlobalValue getGlobalValueInstance] setLastRefreshTime:[NSDate date]];
}

-(void)newThreadUptBrowse:(NSNumber *)province
{
    NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
    BrowseService *bServ=[[BrowseService alloc] init];
    @try {
        [bServ updateBrowseHistoryByInterface:province];
    }
    @catch (NSException *exception) {
        
    }
    @finally {
        
    }
    [bServ release];
    [pool drain];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"RefleshImmediately" object:nil];
}

-(void)newThreadChangeProvince {
    NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
    UserService *service=[[[UserService alloc] init] autorelease];
    NSString *token=[GlobalValue getGlobalValueInstance].token;
    int provinceId=[[GlobalValue getGlobalValueInstance].provinceId intValue];
    if (token!=nil) {
        int result=[service changeProvince:token provinceId:[NSNumber numberWithInt:provinceId]];
        if (1==result) {
            CartService* cser=[[CartService alloc] init];
            int ProNumber = [cser countSessionCart:[GlobalValue getGlobalValueInstance].token siteType:[NSNumber numberWithInt:1]];
            
            [SharedDelegate clearCartNum];
            if (ProNumber > 0)
            {
                [SharedDelegate setCartNum:ProNumber];
            }
            [cser release];
            [[NSNotificationCenter defaultCenter] postNotificationName:@"CartChanged" object:nil];
		} else {
            [self performSelectorOnMainThread:@selector(changeProvinceShow) withObject:nil waitUntilDone:NO];
        }
    } else {
        Trader *trader=[GlobalValue getGlobalValueInstance].trader;
        LocalCartService *tempLocalCartSer=[[[LocalCartService alloc] init] autorelease];
        NSArray *SYNdates = [tempLocalCartSer getLocalCartSynDateFromSqlite3];
        NSArray *productIds = [SYNdates objectAtIndex:0];
        NSArray *merchantIds = [SYNdates objectAtIndex:1];
        if (productIds!=nil && [productIds count]>0) {
            __block NSArray *tempArray;
            [self performInThreadBlock:^(){
                tempArray = [[service updateCartProductUnlogin:trader productIds:productIds merchantIds:merchantIds provinceId:[NSNumber numberWithInt:provinceId]] retain];
                [tempLocalCartSer changeLocalCartItemToSqlite3:tempArray];
            } completionInMainBlock:^(){
                int cartNum = [tempLocalCartSer getLocalCartNumberFromSqlite3];
                [SharedDelegate clearCartNum];
                if (cartNum>0) {
                    [SharedDelegate setCartNum:cartNum];
                }
                [[NSNotificationCenter defaultCenter] postNotificationName:@"CartChanged" object:nil];
                [tempArray release];
            }];
        }
    }
    isChangingProvince=NO;
    [pool drain];
}

-(void)changeProvinceShow
{
    UIAlertView * tempAlt = [[OTSAlertView alloc]initWithTitle:nil message:@"切换省份失败"delegate:nil cancelButtonTitle:@"确定" otherButtonTitles:nil];
    [tempAlt show];
    [tempAlt release];
    tempAlt = nil;
}

-(void)enterSwitchProvince
{
	[[NSNotificationCenter defaultCenter] postNotificationName:@"ResignFirstResponderFromHomepage" object:nil];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"AddSwitchProvinceForTabBar" object:nil];
}

-(void)switchToGPSProvince
{
    //crash -[NSPlaceholderString initWithString:]: nil argument
    
    
    NSString *mGpsProStr = @"";
    if ([GlobalValue getGlobalValueInstance].gpsProvinceStr) {
        mGpsProStr=[GlobalValue getGlobalValueInstance].gpsProvinceStr;
    }
    self.m_NewProvinceStr = mGpsProStr;
    if (m_NewProvinceStr == nil || m_CurrentProvinceStr == nil) {
        [self changeProvinceShow];
    }
    else if (![m_NewProvinceStr isEqualToString:m_CurrentProvinceStr]) {
        [self refreshAllForProvinceChanged];
		[[NSNotificationCenter defaultCenter] postNotificationName:@"ProvinceChanged" object:mGpsProStr];
    }
}

#pragma mark 是否支持屏幕自动旋转
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
	return YES;
}

#pragma mark 版本更新
//获得版本更新数据
-(void)newThreadVersionUpdate {
	NSAutoreleasePool *pool=[[NSAutoreleasePool alloc] init];
	if([GlobalValue getGlobalValueInstance].errorType != nil){
		return;
	}
	SystemService * sServ = [[[SystemService alloc]init] autorelease];
	@try {
		DownloadVO * downloadVO = [sServ getClientApplicationDownloadUrl:[GlobalValue getGlobalValueInstance].trader];
		if (downloadVO != nil && ![downloadVO isKindOfClass:[NSNull class]]) {
			[self performSelectorOnMainThread:@selector(doVersionUpdate:) withObject:downloadVO waitUntilDone:NO];
		}
	}
	@catch (NSException * e) {
	}
	@finally {
		[pool drain];
	}
}
//版本更新
-(void)doVersionUpdate:(DownloadVO *)downloadVO {
    [[GlobalValue getGlobalValueInstance] setHaveAlertViewInShow:YES];
	if (downloadVO != nil) {//接口读取正常情况
		if ([downloadVO.canUpdate isEqualToString:@"true"]) {//有更新情况
			[[GlobalValue getGlobalValueInstance] setDownloadVO:downloadVO];
			if ([downloadVO.forceUpdate isEqualToString:@"true"]) {//强制更新情况
				[self showAlertView:@"更新提示" alertMsg:[NSString stringWithFormat:@"%@", downloadVO.remark] alertTag:ALERT_TAG_FORCEUPDATE_TRUE];
			} else {//非强制更新情况
				[self showAlertView:@"更新提示" alertMsg:[NSString stringWithFormat:@"%@", downloadVO.remark] alertTag:ALERT_TAG_FORCEUPDATE_FALSE];
			}
		}
	} else {//接口返回异常情况
	}
}

#pragma mark    周年庆
-(void)enterCelebrateView:(NSString *)url
{
    if (celebrateTitleStr != nil) {
        [celebrateTitleStr release];
    }
    celebrateTitleStr=[[NSString alloc] initWithString:@"热门活动"];
    if (celebrateWebUrl!=nil) {
        [celebrateWebUrl release];
    }
    celebrateWebUrl=[[NSString alloc] initWithString:url];
    [self initCelebrateView];
}

//初始化周年庆界面
-(void)initCelebrateView {
    if (m_CelebrateView!=nil) {
        [m_CelebrateView removeFromSuperview];
        [m_CelebrateView release];
    }
    if (m_CelebrateWebView!=nil) {
        [m_CelebrateWebView removeFromSuperview];
        [m_CelebrateWebView release];
    }
    m_CelebrateView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, ApplicationWidth, ApplicationHeight)];
    [m_CelebrateView setBackgroundColor:[UIColor grayColor]];
    m_CelebrateWebView = [[UIWebView alloc] initWithFrame:CGRectMake(0, 44, ApplicationWidth, ApplicationHeight-TABBAR_HEIGHT-NAVIGATION_BAR_HEIGHT)];
	//标题图片
	UIImageView * titleBGImg = [[UIImageView alloc]initWithFrame:CGRectMake(0,0,ApplicationWidth,NAVIGATION_BAR_HEIGHT)];
	titleBGImg.image = [UIImage imageNamed:@"title_bg.png"];
	//标题栏
	celebrateTitleLabel = [[UILabel alloc]initWithFrame:CGRectMake(65, 0, 190, NAVIGATION_BAR_HEIGHT)];
	[celebrateTitleLabel setText:celebrateTitleStr];
	[celebrateTitleLabel setBackgroundColor:[UIColor clearColor]];
	celebrateTitleLabel.textColor = [UIColor whiteColor];
	[celebrateTitleLabel setTextAlignment:UITextAlignmentCenter];
	[celebrateTitleLabel setNumberOfLines:2];
	celebrateTitleLabel.font = [UIFont boldSystemFontOfSize:18.0];
	celebrateTitleLabel.shadowColor = [UIColor darkGrayColor];
	celebrateTitleLabel.shadowOffset = CGSizeMake(1.0, -1.0);
	[titleBGImg addSubview:celebrateTitleLabel];
	[celebrateTitleLabel release];
	//返回按钮
	UIButton * backBtn = [[UIButton alloc]initWithFrame:CGRectMake(0,0,61,NAVIGATION_BAR_HEIGHT)];
	[backBtn setTitleColor:[UIColor whiteColor] forState:0];
	backBtn.titleLabel.font = [UIFont boldSystemFontOfSize:13.0];
	backBtn.titleLabel.shadowColor = [UIColor darkGrayColor];
	backBtn.titleLabel.shadowOffset = CGSizeMake(1.0, -1.0);
	[backBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn.png"] forState:0];
    [backBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn_sel.png"] forState:UIControlStateHighlighted];
	[backBtn addTarget:self action:@selector(backHomepage) forControlEvents:UIControlEventTouchUpInside];
	titleBGImg.userInteractionEnabled = YES;
	[titleBGImg addSubview:backBtn];
	[backBtn release];
	[m_CelebrateView addSubview:titleBGImg];
	[titleBGImg release];
	//周年浏览器
	[m_CelebrateWebView setDelegate:self];
	//[m_CelebrateWebView setOpaque:NO];
	//m_CelebrateWebView.backgroundColor=[UIColor whiteColor];
	[m_CelebrateView addSubview:m_CelebrateWebView];
	[self.view addSubview:m_CelebrateView];
    [self performSelectorOnMainThread:@selector(loadWeb) withObject:self waitUntilDone:YES];
}

-(void)loadWeb {
	[m_CelebrateWebView loadRequest:[NSURLRequest requestWithURL:[NSURL URLWithString:celebrateWebUrl]]];
}

#pragma mark    周年庆带规则说明
-(void)showCelebrateViewWithRule
{
    if (m_CelebrateView!=nil) {
        [m_CelebrateView removeFromSuperview];
        [m_CelebrateView release];
    }
    if (m_CelebrateWebView!=nil) {
        [m_CelebrateWebView removeFromSuperview];
        [m_CelebrateWebView release];
    }
    m_CelebrateView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 460)];
    [m_CelebrateView setBackgroundColor:[UIColor grayColor]];
    m_CelebrateWebView = [[UIWebView alloc] initWithFrame:CGRectMake(0, 44, 320, 367)];
	//标题图片
	UIImageView * titleBGImg = [[UIImageView alloc]initWithFrame:CGRectMake(0,0,320,44)];
	titleBGImg.image = [UIImage imageNamed:@"title_bg.png"];
	//标题栏
	celebrateTitleLabel = [[UILabel alloc]initWithFrame:CGRectMake(85, 0, 150, 44)];
	[celebrateTitleLabel setText:celebrateTitleStr];
	[celebrateTitleLabel setBackgroundColor:[UIColor clearColor]];
	celebrateTitleLabel.textColor = [UIColor whiteColor];
	[celebrateTitleLabel setTextAlignment:UITextAlignmentCenter];
	[celebrateTitleLabel setNumberOfLines:2];
	celebrateTitleLabel.font = [UIFont boldSystemFontOfSize:18.0];
	celebrateTitleLabel.shadowColor = [UIColor darkGrayColor];
	celebrateTitleLabel.shadowOffset = CGSizeMake(1.0, -1.0);
	[titleBGImg addSubview:celebrateTitleLabel];
	[celebrateTitleLabel release];
	//返回按钮
	UIButton * backBtn = [[UIButton alloc]initWithFrame:CGRectMake(0,0,61,44)];
	[backBtn setTitleColor:[UIColor whiteColor] forState:0];
	backBtn.titleLabel.font = [UIFont boldSystemFontOfSize:13.0];
	backBtn.titleLabel.shadowColor = [UIColor darkGrayColor];
	backBtn.titleLabel.shadowOffset = CGSizeMake(1.0, -1.0);
	[backBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn.png"] forState:0];
    [backBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn_sel.png"] forState:UIControlStateHighlighted];
	[backBtn addTarget:self action:@selector(backHomepage) forControlEvents:UIControlEventTouchUpInside];
	titleBGImg.userInteractionEnabled = YES;
	[titleBGImg addSubview:backBtn];
	[backBtn release];
    //右边按钮
	UIButton * rightBtn = [[UIButton alloc]initWithFrame:CGRectMake(259, 0, 61, 44)];
	[rightBtn setTitle:@"规则说明" forState:0];
	[rightBtn setTitleColor:[UIColor whiteColor] forState:0];
	rightBtn.titleLabel.font = [UIFont boldSystemFontOfSize:13.0];
	rightBtn.titleLabel.shadowColor = [UIColor darkGrayColor];
	rightBtn.titleLabel.shadowOffset = CGSizeMake(1.0, -1.0);
	[rightBtn setBackgroundImage:[UIImage imageNamed:@"title_right_btn.png"] forState:0];
	[rightBtn addTarget:self action:@selector(showRule) forControlEvents:UIControlEventTouchUpInside];
	[titleBGImg addSubview:rightBtn];
	[rightBtn release];
    
	[m_CelebrateView addSubview:titleBGImg];
	[titleBGImg release];
	//周年浏览器
	[m_CelebrateWebView setDelegate:self];
	//[m_CelebrateWebView setOpaque:NO];
	//m_CelebrateWebView.backgroundColor=[UIColor colorWithRed:0.93 green:0.93 blue:0.93 alpha:0.7f];
	[m_CelebrateView addSubview:m_CelebrateWebView];
	[self.view addSubview:m_CelebrateView];
    [self performSelectorOnMainThread:@selector(loadWeb) withObject:self waitUntilDone:YES];
}

//规则说明
-(void)showRule
{
    CATransition *animation=[CATransition animation];
    animation.duration=0.3f;
    animation.timingFunction=UIViewAnimationCurveEaseInOut;
    [animation setType:kCATransitionPush];
    [animation setSubtype:kCATransitionFromRight];
    [self.view.superview.layer addAnimation:animation forKey:@"Reveal"];
    
    ruleView=[[UIView alloc] initWithFrame:CGRectMake(0, 0, 320, 460)];
    [m_CelebrateView addSubview:ruleView];
    [ruleView release];
    //标题图片。
	UIImageView *titleBGImg=[[UIImageView alloc]initWithFrame:CGRectMake(0,0,320,44)];
	[titleBGImg setImage:[UIImage imageNamed:@"title_bg.png"]];
    [ruleView addSubview:titleBGImg];
    [titleBGImg release];
    titleBGImg.userInteractionEnabled=YES;
    //标题栏
	UILabel *label=[[UILabel alloc]initWithFrame:CGRectMake(65, 0, 190, 44)];
	[label setText:@"规则说明"];
	[label setBackgroundColor:[UIColor clearColor]];
	label.textColor = [UIColor whiteColor];
	[label setTextAlignment:UITextAlignmentCenter];
	label.font = [UIFont boldSystemFontOfSize:18.0];
	label.shadowColor = [UIColor darkGrayColor];
	label.shadowOffset = CGSizeMake(1.0, -1.0);
	[titleBGImg addSubview:label];
	[label release];
	//返回按钮
	UIButton *backBtn=[[UIButton alloc]initWithFrame:CGRectMake(0,0,61,44)];
	[backBtn setTitleColor:[UIColor whiteColor] forState:0];
	backBtn.titleLabel.font = [UIFont boldSystemFontOfSize:13.0];
	backBtn.titleLabel.shadowColor = [UIColor darkGrayColor];
	backBtn.titleLabel.shadowOffset = CGSizeMake(1.0, -1.0);
	[backBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn.png"] forState:0];
    [backBtn setBackgroundImage:[UIImage imageNamed:@"title_left_btn_sel.png"] forState:UIControlStateHighlighted];
	[backBtn addTarget:self action:@selector(backToCelebrate) forControlEvents:UIControlEventTouchUpInside];
	[titleBGImg addSubview:backBtn];
	[backBtn release];
    //webview
    ruleWebView=[[UIWebView alloc] initWithFrame:CGRectMake(0, 44, 320, 367)];
	[ruleWebView setDelegate:self];
	[ruleWebView setOpaque:NO];
	ruleWebView.backgroundColor=[UIColor colorWithRed:0.93 green:0.93 blue:0.93 alpha:0.7f];
	[ruleView addSubview:ruleWebView];
    [ruleWebView release];
    [self performSelectorOnMainThread:@selector(loadRuleWeb) withObject:self waitUntilDone:YES];
}

-(void)loadRuleWeb
{
    NSString *urlStr=@"http://m.yihaodian.com/anny/rule";
    NSURL *url=[[NSURL alloc] initWithString:urlStr];
	[ruleWebView loadRequest:[NSURLRequest requestWithURL:url]];
	[url release];
}

-(void)backToCelebrate
{
    CATransition *animation = [CATransition animation];
    animation.duration = 0.3f;
    animation.timingFunction = UIViewAnimationCurveEaseInOut;
	[animation setType:kCATransitionPush];
	[animation setSubtype: kCATransitionFromLeft];
	[m_CelebrateView.layer addAnimation:animation forKey:@"Reveal"];
    [ruleView removeFromSuperview];
}

#pragma mark    返回首页
-(void)backHomepage {
    if (m_CelebrateWebView.canGoBack) {
        [m_CelebrateWebView goBack];
    }
    else
    {
        CATransition *animation = [CATransition animation];
        animation.duration = 0.3f;
        animation.timingFunction = UIViewAnimationCurveEaseInOut;
        [animation setType:kCATransitionPush];
        [animation setSubtype: kCATransitionFromLeft];
        [self.view.superview.layer addAnimation:animation forKey:@"Reveal"];
        if (m_CelebrateView!=nil) {
            [m_CelebrateView removeFromSuperview];
        }
        if (m_CelebrateWebView!=nil) {
            [m_CelebrateWebView setDelegate:nil];
            [m_CelebrateWebView removeFromSuperview];
        }
    }
    [self hideLoading];
    
}

//website页面进入商品详情
-(void)enterProductDetail:(NSArray *)array {
    if ([array count]<2) {
        return;
    }
    int productId=[[array objectAtIndex:0] intValue];
    NSString *promotionId=[array objectAtIndex:1];
    if ([promotionId isEqualToString:@"0"]) {
        promotionId=@"";
    }
    //    http://m.yihaodian.com/mw/product/1676_43425_0_landingpage
    //    productId = 1676;
    //    promotionId = @"43425_0_landingpage";
    OTSProductDetail *productDetail=[[[OTSProductDetail alloc] initWithProductId:productId promotionId:promotionId fromTag:PD_FROM_OTHER] autorelease];
    [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
    [self pushVC:productDetail animated:YES];
}
//website页面进入团购商品详情
-(void)enterGrouponDetailWithProducts:(NSArray *)products currentIndex:(int)index areaId:(NSNumber *)areaId fromTag:(int)fromTag {
    [SharedDelegate enterGrouponDetailWithAreaId:areaId products:products currentIndex:index fromTag:fromTag isFullScreen:YES];
}

-(void)enterGroupDetail:(NSArray*)array{
    if ([array count]<2) {
        return;
    }
    
    NSNumberFormatter * f = [[NSNumberFormatter alloc] init];                       // string转换为 nsnumber
    [f setNumberStyle:kCFNumberFormatterNoStyle];
    NSNumber * groupId = [f numberFromString:[array objectAtIndex:0]];              // 团购ID
    NSNumber * areaId = [f numberFromString:[array objectAtIndex:1]];               // 地区ID
    [f release];
    
    GrouponVO * grouponVO = [[GrouponVO alloc] init];
    [grouponVO setNid:groupId];
    [grouponVO setAreaId:areaId];
    
    NSMutableArray *products=[[NSMutableArray alloc] init];
    [products addObject:grouponVO];
    [grouponVO release];
    
    [self enterGrouponDetailWithProducts:products currentIndex:0 areaId:areaId fromTag:FROM_CMS_TO_DETAIL];
    
    [products release];
}
//进入CMS促销页面
-(void)enterCMSPage:(HotPointNewVO *)hotPointNewVO
{
    if (0==[[hotPointNewVO type] intValue]){//热销商品
        HotPointNewVO *hotPointVO=hotPointNewVO;
        if ([hotPointVO grouponVOList]!=nil) {//团购商品列表
            GrouponVO *grouponVO=[OTSUtility safeObjectAtIndex:0 inArray:[hotPointVO grouponVOList]];
            
            NSMutableArray *products=[[NSMutableArray alloc] init];
            [products addObject:grouponVO];
            
            [self enterGrouponDetailWithProducts:products currentIndex:0 areaId:nil fromTag:FROM_CMS_TO_DETAIL];
            
            [products release];
        } else if ([hotPointVO productVOList]!=nil) {
            ProductVO *productVO=[OTSUtility safeObjectAtIndex:0 inArray:[hotPointVO productVOList]];
            OTSProductDetail *productDetail=[[[OTSProductDetail alloc] initWithProductId:[productVO.productId longValue] promotionId:productVO.promotionId fromTag:PD_FROM_OTHER] autorelease];
            [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
            [self pushVC:productDetail animated:YES];
        } else {
        }
    } else if (1==[[hotPointNewVO type] intValue]){//热销活动
        if (celebrateTitleStr!=nil) {
            [celebrateTitleStr release];
        }
        celebrateTitleStr=[hotPointNewVO.title retain];
        if (celebrateWebUrl!=nil) {
            [celebrateWebUrl release];
        }
        celebrateWebUrl=[hotPointNewVO.detailUrl retain];
        CATransition *animation = [CATransition animation];
        animation.duration = 0.3f;
        animation.timingFunction = UIViewAnimationCurveEaseInOut;
        [animation setType:kCATransitionPush];
        [animation setSubtype: kCATransitionFromRight];
        [self.view.superview.layer addAnimation:animation forKey:@"Reveal"];
        [self initCelebrateView];
    } else if (2==[[hotPointNewVO type] intValue]){//市场活动规则
        if (celebrateTitleStr!=nil) {
            [celebrateTitleStr release];
        }
        celebrateTitleStr=[hotPointNewVO.title retain];
        if (celebrateWebUrl!=nil) {
            [celebrateWebUrl release];
        }
        celebrateWebUrl=[hotPointNewVO.detailUrl retain];
        CATransition *animation = [CATransition animation];
        animation.duration = 0.3f;
        animation.timingFunction = UIViewAnimationCurveEaseInOut;
        [animation setType:kCATransitionPush];
        [animation setSubtype: kCATransitionFromRight];
        [self.view.superview.layer addAnimation:animation forKey:@"Reveal"];
        [self initCelebrateView];
        //[DoTracking doTrackingSecond:[NSString stringWithFormat:@"homeHotActivityRule_%@",[GlobalValue getGlobalValueInstance].provinceId]];//进入市场活动规则数据统计
    } else if (3==[[hotPointNewVO type] intValue]) {//绑定团购
        [self removeSubControllerClass:[GroupBuyHomePage class]];
        GroupBuyHomePage *groupBuyHomePage=[[[GroupBuyHomePage alloc] initWithNibName:@"GroupBuyHomePage" bundle:nil] autorelease];
        [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
        [self.view addSubview:[groupBuyHomePage view]];
        
        //[DoTracking doTrackingSecond:[NSString stringWithFormat:@"homeHotBindingGroupon_%@",[GlobalValue getGlobalValueInstance].provinceId]];//进入团购数据统计
    } else if (4==[[hotPointNewVO type] intValue]) {//新热销活动
        if (celebrateTitleStr!=nil) {
            [celebrateTitleStr release];
        }
        celebrateTitleStr=[hotPointNewVO.title retain];
        if (celebrateWebUrl!=nil) {
            [celebrateWebUrl release];
        }
        celebrateWebUrl=[[NSString alloc] initWithString:[NSString stringWithFormat:@"%@/30/%@",hotPointNewVO.detailUrl,[GlobalValue getGlobalValueInstance].provinceId]];
        //        celebrateWebUrl=[[NSString alloc] initWithFormat:@"%@/30/%@",@"http://m.yihaodian.com/mw/cms/20130325135442",[GlobalValue getGlobalValueInstance].provinceId];
        //        celebrateWebUrl = @"http://m.yihaodian.com/mw/cms/20130502142924";
        CATransition *animation = [CATransition animation];
        animation.duration = 0.3f;
        animation.timingFunction = UIViewAnimationCurveEaseInOut;
        [animation setType:kCATransitionPush];
        [animation setSubtype: kCATransitionFromRight];
        [self.view.superview.layer addAnimation:animation forKey:@"Reveal"];
        [self initCelebrateView];
        //[DoTracking doTrackingSecond:[NSString stringWithFormat:@"homeHotActivityNew_%@_%@",[GlobalValue getGlobalValueInstance].provinceId,hotPointNewVO.topicId]];//进入新热销活动数据统计
    }
}

#pragma mark    pageview相关delegate
- (void)pageView:(OTSPageView *)pageView pageChangedTo:(NSIndexPath *)indexPath{
}

- (void)pageView:(OTSPageView *)pageView didTouchOnPage:(NSIndexPath *)indexPath{
    NSInteger index = [indexPath row];
    if (index>=[hotTopFivePage.objList count]) {
        return;
    }
    //新接口版本轮播图中也会返回N元n件、满减等促销活动，
    HotPointNewVO *hotPointNewVO=((HotPointNewVO *)[hotTopFivePage.objList objectAtIndex:index]);
    if ([hotPointNewVO.type intValue]==5) {
        [self enterNNPieces:hotPointNewVO];//n元n件
    }else if([hotPointNewVO.type intValue]==6){
        [self enterRePromotion:hotPointNewVO];
    }else{
        [self enterCMSPage:hotPointNewVO];
    }
    // N元N件和满减均算作CMS的统计
    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_HotPage extraPrama:[NSString stringWithFormat:@"%@",hotPointNewVO.promotionId],nil]autorelease];
    [DoTracking doJsTrackingWithParma:prama];
}

- (UIView *)pageView:(OTSPageView *)pageView pageAtIndexPath:(NSIndexPath *)indexPath{
    UIImageView *imageView=[[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, pageView.frame.size.width, pageView.frame.size.height)] autorelease];
    NSInteger i=[indexPath row];
    if (i>=[hotTopFivePage.objList count]) {
        imageView.image = [UIImage imageNamed:@"defaultimg320x120.png"];
    } else {
    
    //用于药网修改 Linpan
//        NSString *fileName=[((HotPointNewVO *)[hotTopFivePage.objList objectAtIndex:i]).picUrl stringFromMD5];
//        UIImage *image=[ImageCache getImageFromFile:fileName];
        
        NSString *fileName=[((SpecialRecommendInfo *)[hotTopFivePage.objList objectAtIndex:i]).imageUrl stringFromMD5];
        UIImage *image=[ImageCache getImageFromFile:fileName];
        if (image != nil) {
            imageView.image = image;
        } else {
            imageView.image = [UIImage imageNamed:@"defaultimg320x120.png"];
        }
    }
    return imageView;
}

- (NSInteger)numberOfPagesInPageView:(OTSPageView *)pageView {
    if (hotTopFivePage==nil || hotTopFivePage.objList==nil) {
        return 1;
    }
    return [hotTopFivePage.objList count];
}
/* 原来首页楼层的代理方法，现在已经废弃了 ---Apan 2013-7-12
 
#pragma mark    model A相关delegate
-(AdvertisingPromotionVO *)adModelAViewData:(OTSAdModelAView *)adModelAView
{
    int index=[adModelAView tag]-200;
    return [m_AdArray objectAtIndex:index];
}

-(void)adModelAView:(OTSAdModelAView *)adModelAView keyWordBtnClicked:(UIButton *)keyWordBtn
{
    NSString *keyword=[keyWordBtn titleForState:UIControlStateNormal];
    if (keyword!=nil) {
        SearchResult *searchResult=[[[SearchResult alloc] initWithKeyword:keyword fromTag:FROM_AD_MODEL] autorelease];
        [self pushVC:searchResult animated:YES];
    }
}

-(void)adModelAView:(OTSAdModelAView *)adModelAView bigImageBtnClicked:(UIButton *)bigImageBtn
{
    int index=[adModelAView tag]-200;
    HotPointNewVO *hotPointNewVO=[OTSUtility safeObjectAtIndex:0 inArray:[[m_AdArray objectAtIndex:index] hotPointNewVOList]];
    [self enterCMSPage:hotPointNewVO];
    
    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_HotPage extraPrama:[NSString stringWithFormat:@"%@",hotPointNewVO.promotionId],nil]autorelease];
    [DoTracking doJsTrackingWithParma:prama];
}

-(void)adModelAView:(OTSAdModelAView *)adModelAView didSelectRowAtIndexPath:(NSIndexPath * )indexPath
{
    int index=[adModelAView tag]-200;
    HotPointNewVO *hotPointNewVO=[OTSUtility safeObjectAtIndex:[indexPath row] inArray:[[m_AdArray objectAtIndex:index] hotPointNewVOList]];
    [self enterCMSPage:hotPointNewVO];
    
    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_HotPage extraPrama:[NSString stringWithFormat:@"%@",hotPointNewVO.promotionId],nil]autorelease];
    [DoTracking doJsTrackingWithParma:prama];
}
 */

/******** model A 和model B 已经废弃了吧  --- Apan 2013-7-12 ***********

#pragma mark    model B相关delegate
-(AdvertisingPromotionVO *)adModelBViewData:(OTSAdModelBView *)adModelBView
{
    int index=[adModelBView tag]-200;
    return [m_AdArray objectAtIndex:index];
}

-(void)adModelBView:(OTSAdModelBView *)adModelBView foldBtnClicked:(UIButton *)foldBtn
{
    int currentModelTag=[adModelBView tag]-200;
    [UIView setAnimationsEnabled:YES];
    [UIView beginAnimations:nil context:self.view];//开始动画
	[UIView setAnimationDuration:0.2];//设定速度
    int i;
    for (i=0; i<[m_AdArray count]; i++) {
        AdvertisingPromotionVO *adVO=[m_AdArray objectAtIndex:i];
        if (adVO==nil || [adVO hotPointNewVOList]==nil) {
            continue;
        }
        UIView *view=[m_ScrollView viewWithTag:200+i];
        if ([view isKindOfClass:[OTSAdModelBView class]]) {
            OTSAdModelBView *modelBView=(OTSAdModelBView *)view;
            if (i==currentModelTag) {//当前模块
                BOOL isFold=[modelBView isFold];
                [modelBView setIsFold:!isFold];
            } else {//其他模块，收起
                [modelBView setIsFold:YES];
            }
        }
    }
    [self updateAdModelFrame];
    [UIView commitAnimations];
    [UIView setAnimationsEnabled:NO];
    //展开的模块自动移到顶部
    if (![adModelBView isFold]) {
        [m_ScrollView setContentOffset:CGPointMake(adModelBView.frame.origin.x, adModelBView.frame.origin.y) animated:YES];
    }
}

-(void)adModelBView:(OTSAdModelBView *)adModelBView enterGrouponDetail:(GrouponVO *)grouponVO
{
    NSMutableArray *products=[[NSMutableArray alloc] init];
    [products addObject:grouponVO];
    
    [self enterGrouponDetailWithProducts:products currentIndex:0 areaId:nil fromTag:FROM_CMS_TO_DETAIL];
    
    [products release];
}

-(void)adModelBView:(OTSAdModelBView *)adModelBView enterProductDetail:(ProductVO *)productVO
{
    OTSProductDetail *productDetail=[[[OTSProductDetail alloc] initWithProductId:[productVO.productId longValue] promotionId:productVO.promotionId fromTag:PD_FROME_MODEL_B] autorelease];
    [self.view.layer addAnimation:[OTSNaviAnimation animationPushFromRight] forKey:@"Reveal"];
    [self pushVC:productDetail animated:YES];
}

-(void)adModelBView:(OTSAdModelBView *)adModelBView didSelectRowAtIndexPath:(NSIndexPath * )indexPath
{
    int index=[adModelBView tag]-200;
    HotPointNewVO *hotPointNewVO=[OTSUtility safeObjectAtIndex:[indexPath row] inArray:[[m_AdArray objectAtIndex:index] hotPointNewVOList]];
    [self enterCMSPage:hotPointNewVO];
    
    JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AD_HotPage extraPrama:[NSString stringWithFormat:@"%@",hotPointNewVO.promotionId],nil]autorelease];
    [DoTracking doJsTrackingWithParma:prama];
}

-(void)adModelBView:(OTSAdModelBView *)adModelBView keyWordBtnClicked:(UIButton *)keyWordBtn
{
    NSString *keyword=[keyWordBtn titleForState:UIControlStateNormal];
    if (keyword!=nil) {
        SearchResult *searchResult=[[[SearchResult alloc] initWithKeyword:keyword fromTag:FROM_AD_MODEL] autorelease];
        [self pushVC:searchResult animated:YES];
    }
}
 */

#pragma mark EGORefreshTableHeaderView相关delegate
- (void)egoRefreshTableHeaderDidTriggerRefresh:(EGORefreshTableHeaderView*)view {
    [self refreshHomePageData];
}

- (BOOL)egoRefreshTableHeaderDataSourceIsLoading:(EGORefreshTableHeaderView*)view {
	return isRefreshingHotPage;
}

- (NSDate*)egoRefreshTableHeaderDataSourceLastUpdated:(EGORefreshTableHeaderView*)view {
	return [NSDate date];
}

#pragma mark    scrollView相关delegate
-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    if (scrollView==m_ScrollView) {
        [m_RefreshHeaderView egoRefreshScrollViewDidScroll:scrollView];
    }
}

-(void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
	if (scrollView==m_ScrollView) {
        [m_RefreshHeaderView egoRefreshScrollViewDidEndDragging:scrollView];
    }
}

#pragma mark    alertView的delegate
//点击alertView完成按钮进行的操作
- (void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex {
	switch (alertView.tag) {
		case ALERT_TAG_FORCEUPDATE_FALSE://非强制更新
			if (buttonIndex == 1) {
                NSString* updateAppUrl=[GlobalValue getGlobalValueInstance].downloadVO.downloadUrl;
                if (updateAppUrl==nil) {
                    updateAppUrl=@"http://itunes.apple.com/cn/app/id427457043?mt=8&ls=1";
                }
				NSURL * iTunesUrl = [NSURL URLWithString:updateAppUrl];
				[[UIApplication	sharedApplication] openURL:iTunesUrl];
                [[GlobalValue getGlobalValueInstance] setDownloadVO:nil];
                [SharedDelegate setIsVersionUpdate:YES];
			}
			break;
		case ALERT_TAG_FORCEUPDATE_TRUE://强制更新
			if (buttonIndex == 0) {
                NSString* updateAppUrl=[GlobalValue getGlobalValueInstance].downloadVO.downloadUrl;
                if (updateAppUrl==nil) {
                    updateAppUrl=@"http://itunes.apple.com/cn/app/id427457043?mt=8&ls=1";
                }
				NSURL * iTunesUrl = [NSURL URLWithString:updateAppUrl];
                //				NSURL * iTunesUrl = [NSURL URLWithString:@"http://itunes.apple.com/cn/app/id427457043?mt=8&ls=1"];
				[[UIApplication	sharedApplication] openURL:iTunesUrl];
                [[GlobalValue getGlobalValueInstance] setDownloadVO:nil];
                [SharedDelegate setIsVersionUpdate:YES];
			}
			break;
        case ALERT_TAG_APP_FIRST_LAUNCH: {
            if (buttonIndex==0) {
                [self enterSwitchProvince];
            } else if (buttonIndex==1) {
                [self switchToGPSProvince];
            }
            break;
        }
        case ALERT_TAG_APP_START_LAUNCH: {
            if (buttonIndex==1) {
                [self switchToGPSProvince];
            }
            break;
        }
        case ALERT_TAG_APP_WAKE: {
            if (buttonIndex==1) {
                [self switchToGPSProvince];
				[SharedDelegate enterHomePageRoot];
            }
            break;
        }
		default:
			break;
	}
    [[GlobalValue getGlobalValueInstance] setHaveAlertViewInShow:NO];
    [SharedDelegate setM_isAlertViewShowing:NO];
}

- (void)willPresentAlertView:(UIAlertView *)alertView {
	for( UIView * view in alertView.subviews ) {
		if([view isKindOfClass:[UILabel class]]) {
			UILabel* label = (UILabel*) view;
			if ((alertView.tag ==  ALERT_TAG_APP_WAKE)||(alertView.tag == ALERT_TAG_APP_START_LAUNCH) ||(alertView.tag == ALERT_TAG_APP_FIRST_LAUNCH)) {
				label.textAlignment = UITextAlignmentCenter;
			} else {
				label.textAlignment = UITextAlignmentLeft;
			}
		}
	}
}

//显示提示框
-(void)showAlertView:(NSString *) alertTitle alertMsg:(NSString *)alertMsg alertTag:(int)alertTag {
	[[GlobalValue getGlobalValueInstance] setHaveAlertViewInShow:YES];
    UIAlertView * alert;
    if (alertTag == ALERT_TAG_FORCEUPDATE_TRUE) {
        alert = [[OTSAlertView alloc]initWithTitle:alertTitle message:alertMsg delegate:self cancelButtonTitle:@"更新" otherButtonTitles:nil];
    } else if (alertTag == ALERT_TAG_FORCEUPDATE_FALSE) {
        alert = [[OTSAlertView alloc]initWithTitle:alertTitle message:alertMsg delegate:self cancelButtonTitle:@"稍后" otherButtonTitles:@"更新", nil];
    } else {
        alert = [[OTSAlertView alloc]initWithTitle:alertTitle message:alertMsg delegate:self cancelButtonTitle:@"确认" otherButtonTitles:nil];
    }
    alert.tag = alertTag;
	[alert show];
	[alert release];
	alert = nil;
}

#pragma mark    webView的delegate
-(BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType {
    NSString *requestString=[[request URL] absoluteString];
    //    requestString = @"http://m.1mall.com/mw/groupdetail/124764/1";
	NSArray *components=[requestString componentsSeparatedByString:@"/"];
    DebugLog(@"ddd>>>> %@",[components objectAtIndex:[components count]-2]);
    //查看商品详情
    if ([components count]>=2 && [(NSString *)[components objectAtIndex:[components count]-2] isEqualToString:@"product"]) {
        NSString *tailStr=[components objectAtIndex:[components count]-1];
        NSArray *subComponents=[tailStr componentsSeparatedByString:@"_"];
        NSMutableArray *mArray=[[[NSMutableArray alloc] init] autorelease];
        int i;
        NSString *promotionId=@"";
        for (i=0; i<[subComponents count]; i++) {
            if (i==0) {
                NSString *string=[subComponents objectAtIndex:i];
                [mArray addObject:string];
            } else {
                NSString *string=[subComponents objectAtIndex:i];
                if (i==[subComponents count]-1) {
                    promotionId=[promotionId stringByAppendingString:string];
                } else {
                    promotionId=[promotionId stringByAppendingString:[NSString stringWithFormat:@"%@_",string]];
                }
                if (i==[subComponents count]-1) {
                    [mArray addObject:promotionId];
                }
            }
        }
        [self  performSelectorOnMainThread:@selector(enterProductDetail:) withObject:mArray waitUntilDone:NO];
        return NO;
    }
    
    //加入购物车
    if ([components count]>=2 && [(NSString *)[components objectAtIndex:[components count]-2] isEqualToString:@"buypro"]) {
        NSString *tailStr=[components objectAtIndex:[components count]-1];
        NSArray *subComponents=[tailStr componentsSeparatedByString:@"_"];
        NSMutableArray *mArray=[[[NSMutableArray alloc] init] autorelease];
        if ([GlobalValue getGlobalValueInstance].token==nil&&[requestString rangeOfString:@"landingpage"].location!=NSNotFound) {
            [SharedDelegate enterUserManageWithTag:0];
            return NO;
        }
        
        int i;
        NSString *promotionId=@"";
        for (i=0; i<[subComponents count]; i++) {// productid, merchantId, quantilty
            if (i==0 || i==1 || i==2) {
                NSString *string=[subComponents objectAtIndex:i];
                [mArray addObject:string];
            } else {
                NSString *string=[subComponents objectAtIndex:i];
                if (i==[subComponents count]-1) {
                    promotionId=[promotionId stringByAppendingString:string];
                } else {
                    promotionId=[promotionId stringByAppendingString:[NSString stringWithFormat:@"%@_",string]];
                }
                if (i==[subComponents count]-1) {
                    [mArray addObject:promotionId];
                }
            }
        }
        NSNumberFormatter * formatter = [[[NSNumberFormatter alloc] init]autorelease];
        [formatter setNumberStyle:NSNumberFormatterDecimalStyle];
        NSNumber * productIdNub = [formatter numberFromString:[mArray objectAtIndex:0]];
        
        JSTrackingPrama* prama = [[[JSTrackingPrama alloc]initWithJSType:EJStracking_AddCart extraPramaDic:nil]autorelease];
        [prama setProductId:productIdNub];
        [prama setMerchant_id:[mArray objectAtIndex:1]];
        [DoTracking doJsTrackingWithParma:prama];
        [NSThread detachNewThreadSelector:@selector(newThreadAddCart:) toTarget:self withObject:mArray];
        return NO;
    }
    
    //1号店团购
    if ([components count]>=3 && [(NSString *)[components objectAtIndex:[components count]-3] isEqualToString:@"cmsgroupon"]) {
        
        NSMutableArray *mArray=[[[NSMutableArray alloc] init] autorelease];
        NSString *groupId=[components objectAtIndex:[components count]-2];
        [mArray addObject:groupId];
        NSString *areaId = [components objectAtIndex:[components count]-1];
        [mArray addObject:areaId];
        
        [self  performSelectorOnMainThread:@selector(enterGroupDetail:) withObject:mArray waitUntilDone:NO];
        return NO;
    }
    
    //秒杀规则
    NSRange secKillRange = [requestString rangeOfString:@"http://m.yihaodian.com/mw/killrule/"];
    if (secKillRange.location != NSNotFound) {
        [celebrateTitleLabel setText:@"秒杀规则"];
    }
    else
        [celebrateTitleLabel setText:celebrateTitleStr];
    
    //商城团购
    NSRange grouponRange = [requestString rangeOfString:@"http://m.1mall.com/mw/groupdetail/"];
    if (grouponRange.location != NSNotFound) {
        if ([components count]>=3 && [(NSString *)[components objectAtIndex:[components count]-3] isEqualToString:@"groupdetail"]) {
            
            NSString *urlStr = @"http://m.1mall.com/mw/groupdetail/";
            NSString *grouponId = [components objectAtIndex:[components count]-2];
            NSString *tailString = [components objectAtIndex:[components count]-1];
            NSArray *subComponent = [tailString componentsSeparatedByString:@"_"];
            NSString *areaId = @"1";
            if ([subComponent count] > 0) {
                areaId = [OTSUtility safeObjectAtIndex:0 inArray:subComponent];
            }
            if ([GlobalValue getGlobalValueInstance].token == nil) {
                urlStr = [urlStr stringByAppendingFormat:@"%@/%@_%d",grouponId,areaId,30];
            } else {
                // 对 token 进行base64加密
                NSData *b64Data = [GTMBase64 encodeData:[[GlobalValue getGlobalValueInstance].token dataUsingEncoding:NSUTF8StringEncoding]];
                NSString *b64Str = [[[NSString alloc] initWithData:b64Data encoding:NSUTF8StringEncoding] autorelease];
                
                urlStr = [urlStr stringByAppendingFormat:@"%@/%@_%@_%d",grouponId,areaId,b64Str,30];
                
            }
            DebugLog(@"enterWap -- url is:\n%@",urlStr);
            [SharedDelegate enterWap:1 invokeUrl:urlStr isClearCookie:NO];
            
            return NO;
        }
    }
    
    NSRange mallProductRange=[requestString rangeOfString:@"http://m.1mall.com/mw/product/"];
    if (mallProductRange.location!=NSNotFound) {
        if ([components count]>=3 && [(NSString *)[components objectAtIndex:[components count]-4] isEqualToString:@"product"]) {
            
            NSString *urlStr = @"http://m.1mall.com/mw/product/";
            NSString *grouponId = [components objectAtIndex:[components count]-3];
            NSString *areaId = [components objectAtIndex:[components count]-2];
            if ([GlobalValue getGlobalValueInstance].token == nil) {
                urlStr = [urlStr stringByAppendingFormat:@"%@/%@/?osType=%d",grouponId,areaId,30];
            } else {
                // 对 token 进行base64加密
                NSData *b64Data = [GTMBase64 encodeData:[[GlobalValue getGlobalValueInstance].token dataUsingEncoding:NSUTF8StringEncoding]];
                NSString *b64Str = [[[NSString alloc] initWithData:b64Data encoding:NSUTF8StringEncoding] autorelease];
                urlStr = [urlStr stringByAppendingFormat:@"%@/%@/?osType=%d&token=%@",grouponId,areaId,30,b64Str];
            }
            DebugLog(@"enterWap -- url is:\n%@",urlStr);
            [SharedDelegate enterWap:1 invokeUrl:urlStr isClearCookie:NO];
        }
        return NO;
    }
	return YES;
}
- (void)webViewDidStartLoad:(UIWebView *)webView
{
    [self showLoading:YES];
}
- (void)webViewDidFinishLoad:(UIWebView *)webView
{
    [self hideLoading];
}
- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error
{
    [self hideLoading];
}


#pragma mark    取消加载view
-(void)releaseResource
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    OTS_SAFE_RELEASE(modulesArray);
    OTS_SAFE_RELEASE(m_ScrollView);
    OTS_SAFE_RELEASE(m_ProvinceDic);
    OTS_SAFE_RELEASE(m_CurrentProvinceStr);
    OTS_SAFE_RELEASE(m_NewProvinceStr);
    OTS_SAFE_RELEASE(hotTopFivePage);
    OTS_SAFE_RELEASE(m_CelebrateView);
    OTS_SAFE_RELEASE(m_CelebrateWebView);
    OTS_SAFE_RELEASE(celebrateProductId);
    OTS_SAFE_RELEASE(celebrateTitleStr);
    OTS_SAFE_RELEASE(celebrateWebUrl);
    OTS_SAFE_RELEASE(m_Search);
    OTS_SAFE_RELEASE(m_UpdateTag);
    OTS_SAFE_RELEASE(m_RefreshHeaderView);
    OTS_SAFE_RELEASE(m_PageView);
}
-(void)viewDidUnload
{
	[self releaseResource];
    [super viewDidUnload];
}
- (void)dealloc {
	[self releaseResource];
    OTS_SAFE_RELEASE(m_AdArray);
    OTS_SAFE_RELEASE(modelATable);
    [super dealloc];
}
@end